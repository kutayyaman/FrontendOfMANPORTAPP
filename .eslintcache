[{"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\index.js":"1","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\reportWebVitals.js":"2","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\UserSignupPage.js":"3","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\apiCalls.js":"4","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\input.js":"5","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\i18n.js":"6","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\LoginPage.js":"7","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\LanguageSelector.js":"8","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\buttonWithProgress.js":"9","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ButtonWithProgress.js":"10","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\shared\\ApiProgress.js":"11","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\container\\App.js":"12","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\HomePage.js":"13","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\DashboardPage.js":"14","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\NavBar.js":"15","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\configureStore.js":"16","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authReducer.js":"17","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authActions.js":"18","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\Constants.js":"19","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryList.js":"20","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryListItem.js":"21","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryCountryListItem.js":"22","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryServerListItem.js":"23","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssuesLıst.js":"24","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssueLıstItem.js":"25","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\JobWithIssuesComponent.js":"26","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\issueApiCalls.js":"27","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssuesPage.js":"28","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueList.js":"29","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueListItem.js":"30","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\appApiCalls.js":"31","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssueDetailPage.js":"32","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueDetailsCard.js":"33","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Spinner.js":"34","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\countryApiCalls.js":"35","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\jobInterfaceApiCalls.js":"36","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\serverApiCalls.js":"37","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueFilter.js":"38","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\ManagementPage.js":"39","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ManagementPageComponents\\ManagementPageListItem.js":"40","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\AppDetailPage.js":"41","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppDetailCard.js":"42","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\teamApiCalls.js":"43","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\userApiCalls.js":"44","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\backendApiCalls.js":"45","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\frontendApiCalls.js":"46","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\databaseApiCalls.js":"47","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppLinks.js":"48","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\linkApiCalls.js":"49","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\FactoryManagementComponent.js":"50","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\applicationCountryApiCalls.js":"51","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCard.js":"52","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCardListItem.js":"53","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationHooks\\SetupApplicationHook.js":"54","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\JobInterfaceHooks\\AddJobInterfaceHook.js":"55","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ServerManagementHooks\\PlantManagementTable.js":"56","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ServerManagementHooks\\PlantManagementTableListItem.js":"57","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\LinkPage.js":"58","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\LinkPageHooks\\LinksCard.js":"59"},{"size":759,"mtime":1613074318693,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"61"},{"size":4668,"mtime":1613260930403,"results":"63","hashOfConfig":"61"},{"size":879,"mtime":1614430255719,"results":"64","hashOfConfig":"61"},{"size":946,"mtime":1615214818991,"results":"65","hashOfConfig":"61"},{"size":6597,"mtime":1615757789091,"results":"66","hashOfConfig":"61"},{"size":3092,"mtime":1615214634676,"results":"67","hashOfConfig":"61"},{"size":785,"mtime":1613232026360,"results":"68","hashOfConfig":"61"},{"size":758,"mtime":1612641195776,"results":"69","hashOfConfig":"61"},{"size":687,"mtime":1613907056148,"results":"70","hashOfConfig":"61"},{"size":2064,"mtime":1614288872753,"results":"71","hashOfConfig":"61"},{"size":2519,"mtime":1615809034152,"results":"72","hashOfConfig":"61"},{"size":183,"mtime":1612727611675,"results":"73","hashOfConfig":"61"},{"size":436,"mtime":1613567714688,"results":"74","hashOfConfig":"61"},{"size":4845,"mtime":1613662993063,"results":"75","hashOfConfig":"61"},{"size":2653,"mtime":1613484621271,"results":"76","hashOfConfig":"61"},{"size":923,"mtime":1613484640135,"results":"77","hashOfConfig":"61"},{"size":283,"mtime":1613143108957,"results":"78","hashOfConfig":"61"},{"size":94,"mtime":1613132231844,"results":"79","hashOfConfig":"61"},{"size":1950,"mtime":1614981803768,"results":"80","hashOfConfig":"61"},{"size":2287,"mtime":1614981934709,"results":"81","hashOfConfig":"61"},{"size":1317,"mtime":1613663279632,"results":"82","hashOfConfig":"61"},{"size":1238,"mtime":1613663143864,"results":"83","hashOfConfig":"61"},{"size":2054,"mtime":1613907181122,"results":"84","hashOfConfig":"61"},{"size":742,"mtime":1613567682863,"results":"85","hashOfConfig":"61"},{"size":870,"mtime":1613663147098,"results":"86","hashOfConfig":"61"},{"size":1151,"mtime":1615055588371,"results":"87","hashOfConfig":"61"},{"size":250,"mtime":1613662451816,"results":"88","hashOfConfig":"61"},{"size":5415,"mtime":1614288334599,"results":"89","hashOfConfig":"61"},{"size":3342,"mtime":1615758537384,"results":"90","hashOfConfig":"61"},{"size":1343,"mtime":1615758437289,"results":"91","hashOfConfig":"61"},{"size":2019,"mtime":1613922024166,"results":"92","hashOfConfig":"61"},{"size":12223,"mtime":1614593638078,"results":"93","hashOfConfig":"61"},{"size":297,"mtime":1613906994374,"results":"94","hashOfConfig":"61"},{"size":241,"mtime":1615027498871,"results":"95","hashOfConfig":"61"},{"size":228,"mtime":1615384188865,"results":"96","hashOfConfig":"61"},{"size":384,"mtime":1615758538880,"results":"97","hashOfConfig":"61"},{"size":5189,"mtime":1614167154846,"results":"98","hashOfConfig":"61"},{"size":5437,"mtime":1615753801007,"results":"99","hashOfConfig":"61"},{"size":4057,"mtime":1615758679334,"results":"100","hashOfConfig":"61"},{"size":1147,"mtime":1615205143746,"results":"101","hashOfConfig":"61"},{"size":18024,"mtime":1615374338245,"results":"102","hashOfConfig":"61"},{"size":103,"mtime":1614511660522,"results":"103","hashOfConfig":"61"},{"size":135,"mtime":1614529937274,"results":"104","hashOfConfig":"61"},{"size":106,"mtime":1614532158181,"results":"105","hashOfConfig":"61"},{"size":108,"mtime":1614532548951,"results":"106","hashOfConfig":"61"},{"size":108,"mtime":1614534014932,"results":"107","hashOfConfig":"61"},{"size":8749,"mtime":1615822354995,"results":"108","hashOfConfig":"61"},{"size":234,"mtime":1615806902493,"results":"109","hashOfConfig":"61"},{"size":4432,"mtime":1615374471539,"results":"110","hashOfConfig":"61"},{"size":464,"mtime":1615038899108,"results":"111","hashOfConfig":"61"},{"size":4332,"mtime":1615205141049,"results":"112","hashOfConfig":"61"},{"size":3253,"mtime":1615225468792,"results":"113","hashOfConfig":"61"},{"size":6494,"mtime":1615374680163,"results":"114","hashOfConfig":"61"},{"size":3382,"mtime":1615807015010,"results":"115","hashOfConfig":"61"},{"size":4046,"mtime":1615757691579,"results":"116","hashOfConfig":"61"},{"size":2190,"mtime":1615757904166,"results":"117","hashOfConfig":"61"},{"size":293,"mtime":1615806632583,"results":"118","hashOfConfig":"61"},{"size":3108,"mtime":1615822393390,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"15734lp",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"122"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"122"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"122"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"122"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\index.js",[],["267","268"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\reportWebVitals.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\UserSignupPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\apiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\input.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\i18n.js",["269","270"],"import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en: {\r\n            translations: {\r\n                'Add User': 'Add User',\r\n                'Passwords must match': 'Passwords must match',\r\n                'Loading...': 'Loading...',\r\n                'Name': 'Name',\r\n                'Surname': 'Surname',\r\n                'Email': 'Email',\r\n                'Password': 'Password',\r\n                'Re-Enter-Password': 'Re-Enter-Password',\r\n                'Login': 'Login',\r\n                'Home': 'Home',\r\n                'Dashboard': 'Dashboard',\r\n                'Management': 'Management',\r\n                'Issues': 'Issues',\r\n                'Links': 'Links',\r\n                'Language': 'Language',\r\n                'Logout': 'Logout',\r\n                'Last Issues': 'Last Issues',\r\n                'Something Went Wrong': 'Something Went Wrong',\r\n                'Issues': 'Issues',\r\n                'Previous': '< Previous',\r\n                'Next': 'Next >',\r\n                'Date': 'Date',\r\n                'App Name': 'App Name',\r\n                'Job Name': 'Job Name',\r\n                'Impact': 'Impact',\r\n                'Country': 'Country',\r\n                'Description': 'Description',\r\n                'Actions': 'Actions',\r\n                'View': 'View',\r\n                'Edit': 'Edit',\r\n                'Delete': 'Delete',\r\n                'Status': 'Status',\r\n                'Issue Not Found': 'Issue Not Found',\r\n                'Updated Successfully': 'Updated Successfully',\r\n                'You Should Fill in the fields': 'You Should Fill in the fields',\r\n                'name': 'Name',\r\n                'Select One': 'Select One',\r\n                'Server': 'Server',\r\n                'Details': 'Details',\r\n                'Remove Filter': 'Remove Filter',\r\n                'Search': 'Search',\r\n                'Update': 'Update',\r\n                'An Error Occured While deleting issue': 'An Error Occured While deleting issue',\r\n                'Application Name': 'Application Name',\r\n                'Business Area': 'Business Area',\r\n                'Live Plants': 'Live Plants',\r\n                'Line Stop Risk': 'Line Stop Risk',\r\n                'Track': 'Track',\r\n                'There is no link for this app': 'There is no link for this app',\r\n                'Issues Management': 'Issues Management',\r\n                'Issue Name': 'Issue Name',\r\n                'Add New App': 'Add New App',\r\n                'Add': 'Add',\r\n                'App Added Successfully': 'App Added Successfully',\r\n                'Setup': 'Setup',\r\n                'Successfully Installed': 'Successfully Installed',\r\n                'Setup An Application On A Server': 'Setup An Application On A Server',\r\n                'Job Added Successfully': 'Job Added Successfully',\r\n                'Add A Job To An App': 'Add A Job To An App',\r\n                'Short Code': 'Short Code',\r\n                'Full Name': 'Full Name',\r\n                'Live App Count': 'Live App Count',\r\n                'deleted' : 'deleted'\r\n            }\r\n        },\r\n        tr: {\r\n            translations: {\r\n                'Add User': 'Kullanıcı Ekle',\r\n                'Passwords must match': 'Şifreler Eşleşmiyor',\r\n                'Loading...': 'Yükleniyor...',\r\n                'Name': 'Ad',\r\n                'Surname': 'Soyad',\r\n                'Email': 'Mail adresi',\r\n                'Password': 'Şifre',\r\n                'Re-Enter-Password': 'Şifre tekrar',\r\n                'Login': 'Giriş Yap',\r\n                'Home': 'Anasayfa',\r\n                'Dashboard': 'Panel',\r\n                'Management': 'Yönetim',\r\n                'Issues': 'Sorunlar',\r\n                'Links': 'Linkler',\r\n                'Language': 'Dil',\r\n                'Logout': 'Çıkış Yap',\r\n                'Last Issues': 'Son Hatalar',\r\n                'Something Went Wrong': 'Bir şeyler yanlış gitti',\r\n                'Issues': 'Sorunlar',\r\n                'Previous': '< Önceki',\r\n                'Next': 'Sonraki >',\r\n                'Date': 'Tarih',\r\n                'App Name': 'Uygulama Adı',\r\n                'Job Name': 'Job Adı',\r\n                'Impact': 'Etki',\r\n                'Country': 'Ülke',\r\n                'Description': 'Tanım',\r\n                'Actions': 'Aksiyonlar',\r\n                'View': 'Görüntüle',\r\n                'Edit': 'Düzenle',\r\n                'Delete': 'Sil',\r\n                'Status': 'Durum',\r\n                'Issue Not Found': 'Issue Bulunamadı',\r\n                'Updated Successfully': 'Başarıyla Güncellendi',\r\n                'You Should Fill in the fields': 'Tüm alanları doldurmalısınız.',\r\n                'name': 'Adı',\r\n                'Select One': 'Bir tane seçin',\r\n                'Server': 'Sunucu',\r\n                'Details': 'Detaylar',\r\n                'Remove Filter': 'Filtreyi Kaldır',\r\n                'Search': 'Ara',\r\n                'Update': 'Güncelle',\r\n                'An Error Occured While deleting issue': 'Issue silinirken bir hata oluştu.',\r\n                'Application Name': 'Uygulama Adı',\r\n                'Business Area': 'İş Alanı',\r\n                'Live Plants': 'Çalıştığı Serverlar',\r\n                'Line Stop Risk': 'Hat Durdurma Riski',\r\n                'Track': 'Takip Edilme',\r\n                'There is no link for this app': 'Bu uygulamaya ait bir link yok',\r\n                'Issues Management': 'Issues Yönetimi',\r\n                'Issue Name': 'Issue Adı',\r\n                'Add New App': 'Yeni Uygulama Ekle',\r\n                'Add': 'Ekle',\r\n                'App Added Successfully': 'Uygulama Eklendi',\r\n                'Setup An Application On A Server': 'Bir sunucuya uygulama kur',\r\n                'Setup': 'Kur',\r\n                'Successfully Installed': 'Başarılı bir şekilde kurulum gerçekleştirildi',\r\n                'Job Added Successfully': 'Job Başarıyla Eklendi',\r\n                'Add A Job To An App': 'Bir Uygulamaya Job Ekle',\r\n                'Short Code': 'Kısa Kod',\r\n                'Full Name': 'Tam Ad',\r\n                'Live App Count': 'Canlı Uygulama Sayısı',\r\n                'deleted' : 'silindi'\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'tr',\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n        escapeValue: false,\r\n        formatSeparator: ','\r\n    },\r\n    react: {\r\n        wait: true\r\n    }\r\n});\r\nexport default i18n;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\LoginPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\LanguageSelector.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\buttonWithProgress.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ButtonWithProgress.js",["271"],"import React from 'react';\r\nimport Spinner from './Spinner';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n    const { onClick, pendingApiCall, disabled, text, loading } = props\r\n    return (\r\n        <div>\r\n            <div className=\"text-center\">\r\n                <button disabled={disabled} className=\"btn btn-primary\" onClick={onClick}>{text}</button>\r\n            </div>\r\n            <div className=\"text-center mt-2\">\r\n                {pendingApiCall && //conditional rendering deniyor buna pendingApiCall dogruysa devamindaki calisir\r\n                    <Spinner></Spinner>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\shared\\ApiProgress.js",["272","273"],"import React, { Component, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiPath, apiMethod = undefined) => { //buda bir hook artik\r\n    const [pendingApiCall, setpendingApiCall] = useState(false);\r\n\r\n    useEffect(() => { // bu hook yuklendigi zaman calisacak.\r\n        let requestInterceptor, responseInterceptor;\r\n\r\n        const updateApiCallFor = (url, inProgress, method) => {\r\n            if (url.startsWith(apiPath)) {\r\n                if (apiMethod !== undefined) {\r\n                    if (method === apiMethod) {\r\n                        setpendingApiCall(inProgress)\r\n                    }\r\n                }\r\n                else {\r\n                    setpendingApiCall(inProgress)\r\n                }\r\n            }\r\n        }\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const { url, method } = request;\r\n                updateApiCallFor(url, true, method);\r\n                return request;\r\n            });\r\n\r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                const { url, method } = response.config;\r\n                updateApiCallFor(url, false, method);\r\n\r\n                return response;\r\n            }, (error) => {\r\n                const { url, method } = error.config;\r\n                updateApiCallFor(url, false, method);\r\n                throw error;\r\n            })\r\n        }\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    }, [apiPath, apiMethod]); //ikinci parametreyi dizi olarak vermeseydim sadece yuklendiginde degil sayfada her degisim oldugunda calisirdi mesela kullanici adini girdigimde her harfe bastigimda calisirdi\r\n\r\n    return pendingApiCall;\r\n}","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\container\\App.js",["274"],"import React, { Component } from 'react';\nimport LoginPageWithApiProgress from '../pages/LoginPage';\nimport UserSignupPageWithApiProgress from '../pages/UserSignupPage';\nimport HomePage from '../pages/HomePage';\nimport DashboardPage from '../pages/DashboardPage';\nimport IssuesPage from '../pages/IssuesPage';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport NavBar from '../components/NavBar'\n//HashRouter kullanarak uygulamayi single page application haline getirmis olduk.\nimport { useSelector } from 'react-redux';\nimport IssueDetailPage from '../pages/IssueDetailPage';\nimport ManagementPage from '../pages/ManagementPage';\nimport AppDetailPage from '../pages/AppDetailPage';\nimport AppDetailsCard from '../components/AppDetailPageComponents/AppDetailCard';\nimport SetupApplicationHook from '../components/ApplicationHooks/SetupApplicationHook.js';\nimport AddJobInterfaceHook from '../components/JobInterfaceHooks/AddJobInterfaceHook';\nimport PlantManagementTable from '../components/ServerManagementHooks/PlantManagementTable';\nimport LinkPage from '../pages/LinkPage';\n\nconst App = () => {\n\n  const { isLoggedIn } = useSelector((store) => { //redux store'daki bilgileri cekiyoruz\n    return {\n      isLoggedIn: store.isLoggedIn,\n    };\n  });\n\n  return (\n    <div>\n      <Router>\n        <NavBar></NavBar>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          {!isLoggedIn && <Route path=\"/login\" component={LoginPageWithApiProgress} />}\n          <Route path=\"/signup\" component={UserSignupPageWithApiProgress} />\n          <Route path=\"/dashboard\" component={DashboardPage} />\n          <Route exact path=\"/management/plants\" component={PlantManagementTable} />\n          <Route exact path=\"/management\" component={ManagementPage} />\n          <Route path=\"/issues\" component={IssuesPage} />\n          <Route path=\"/issue/:id/:disabled\" component={IssueDetailPage} />\n          <Route path=\"/app/:id/:disabled\" component={AppDetailPage} />\n          <Route path=\"/app/add\" component={AppDetailsCard} />\n          <Route path=\"/app/setup\" component={SetupApplicationHook} />\n          <Route path=\"/app/addJobToAnApp\" component={AddJobInterfaceHook} />\n          <Route path=\"/links\" component={LinkPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div> //eger parametre alan bir path tanimlamak isteseydik \"<Route path=\"/user/:email\" component={ComponentName} />\" bunun gibi yapardik.\n  );\n}\n\nexport default App;\n","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\HomePage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\DashboardPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\NavBar.js",["275","276","277","278","279"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'; //a etiketi yerine Link kullanma sebebimiz HashRouter yerine BrowserRouter kullanmak istersek ilerde sorun yasamamk icin yani hashrouter /# gibi bir etiket ekliyor cunku\r\nimport { useTranslation } from 'react-i18next';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt, faSignOutAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport LanguageSelector from '../components/LanguageSelector';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions';\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch(); //redux'a action gondermek icin kullanacagimiz dispatch\r\n\r\n    const reduxState = useSelector((store) => { //redux store'daki bilgileri cekiyoruz\r\n        return {\r\n            isLoggedIn: store.isLoggedIn,\r\n            mail: store.mail,\r\n            name: store.name,\r\n            password: store.password,\r\n            surname: store.surname\r\n        };\r\n    });\r\n    const { isLoggedIn, mail, name, password, surname } = reduxState;\r\n\r\n    let changeableLinks = ( //let block scope ozelligi tasir var ise function scope ozelligi tasir.\r\n        <ul className=\"navbar-nav ml-auto\" >\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    <span className=\"mr-1\">{t('Login')}</span>\r\n                    <FontAwesomeIcon icon={faSignInAlt} />\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">\r\n                    <span className=\"mr-1\">{t('Add User')}</span>\r\n                    <FontAwesomeIcon icon={faUserPlus} />\r\n                </Link>\r\n            </li>\r\n        </ul>);\r\n\r\n    if (isLoggedIn) {\r\n        changeableLinks = (\r\n            <ul className=\"navbar-nav ml-auto\" >\r\n                <li className=\"nav-item mt-2\">\r\n                    <span className=\"mr-1\">{mail}</span>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\" onClick={() => { dispatch(logoutSuccess()); }}>\r\n                        <span className=\"mr-1\">{t('Logout')}</span>\r\n                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                    </Link>\r\n                </li>\r\n            </ul>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow-sm mb-2\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">MANPORT</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\" navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">{t('Home')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/dashboard\">{t('Dashboard')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/management\">{t('Management')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/issues\">{t('Issues')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/links\">{t('Links')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {t('Language')}\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <LanguageSelector></LanguageSelector>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    {changeableLinks}\r\n\r\n                </div>\r\n\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\configureStore.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authReducer.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authActions.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\Constants.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryList.js",["280","281"],"import React, { useState, useEffect } from 'react';\r\nimport { getApplicationsSummary } from '../../api/appApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ApplicationsSummaryListItem from './ApplicationsSummaryListItem';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport Spinner from '../Spinner';\r\n\r\n\r\nconst ApplicationsSummaryList = () => {\r\n    const [summaries, setsummaries] = useState([]);\r\n    const [loadFailure, setloadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('/api/applicationsummary'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            setloadFailure(false);\r\n            const response = await getApplicationsSummary();\r\n            setsummaries(response.data.applicationsSummary);\r\n        } catch (error) {\r\n            setloadFailure(true);\r\n        }\r\n    }, []);\r\n\r\n    let returnView;\r\n    returnView =\r\n        <div>\r\n            {summaries.map((summary, index) => {\r\n                return (\r\n                    <ApplicationsSummaryListItem summary={summary} key={summary.appId} />\r\n                )\r\n            })}\r\n            <div className=\"container text-center mt-2\">\r\n                {pendingApiCall && //conditional rendering deniyor buna pendingApiCall dogruysa devamindaki calisir\r\n                    <Spinner></Spinner>\r\n                }\r\n                {loadFailure == true &&\r\n                    <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            {returnView}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplicationsSummaryList;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryListItem.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryCountryListItem.js",["282","283"],"import React from 'react';\r\nimport { Col, Alert, Row, Container } from 'react-bootstrap';\r\nimport ApplicationsSummaryServerListItem from './ApplicationsSummaryServerListItem';\r\n\r\nconst ApplicationsSummaryCountryListItem = (props) => {\r\n    const { countryWithServersList } = props;\r\n    const { aserverWithJobsList, highestImpactOfCountry } = countryWithServersList;\r\n\r\n    let classOfCountryAlert = 'bg-success text-center';\r\n    if (highestImpactOfCountry === 'LOW') {\r\n        classOfCountryAlert = 'bg-primary text-center';\r\n    } else if (highestImpactOfCountry === 'MEDIUM') {\r\n        classOfCountryAlert = 'bg-warning text-center'\r\n    } else if (highestImpactOfCountry === 'HIGH') {\r\n        classOfCountryAlert = 'bg-danger text-center';\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Alert className={classOfCountryAlert}>\r\n                {countryWithServersList.countryName}\r\n            </Alert>\r\n\r\n            {\r\n                aserverWithJobsList.map((aServerWithJobs, index) => {\r\n                    return (\r\n                        <ApplicationsSummaryServerListItem aServerWithJobs={aServerWithJobs} key={aServerWithJobs.serverId} />\r\n                    )\r\n                })\r\n\r\n            }\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default ApplicationsSummaryCountryListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryServerListItem.js",["284"],"import React from 'react';\r\nimport { Col, Alert, Row } from 'react-bootstrap';\r\nimport JobWithIssuesComponent from './JobWithIssuesComponent';\r\n\r\nconst ApplicationsSummaryServerListItem = (props) => {\r\n    const { aServerWithJobs } = props;\r\n    const { jobAndIssues: jobsAndIssues, highestImpactOfServer } = aServerWithJobs;\r\n\r\n    let classOfServerAlert = 'bg-success text-center';\r\n    if (highestImpactOfServer === 'LOW') {\r\n        classOfServerAlert = 'bg-primary text-center';\r\n    } else if (highestImpactOfServer === 'MEDIUM') {\r\n        classOfServerAlert = 'bg-warning text-center'\r\n    } else if (highestImpactOfServer === 'HIGH') {\r\n        classOfServerAlert = 'bg-danger text-center';\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Col >\r\n                <Alert className={classOfServerAlert}>\r\n                    {aServerWithJobs.serverName}\r\n                </Alert>\r\n            </Col>\r\n\r\n            {jobsAndIssues.map((jobWithIssues, index) => {\r\n                return (\r\n                    <JobWithIssuesComponent jobWithIssues={jobWithIssues} key={jobWithIssues.jobId} />\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ApplicationsSummaryServerListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssuesLıst.js",["285","286"],"import React, { useState, useEffect } from 'react';\r\nimport { getTop3Issues } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Top3IssueLıstItem from './Top3IssueLıstItem';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Top3IssuesLıst = () => { //bu bir hook oldu artik\r\n    const [issues, setissues] = useState([]);\r\n    const [loadFailure, setloadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('/api/issue/top3'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            setloadFailure(false);\r\n            const response = await getTop3Issues();\r\n            setissues(response.data);\r\n        } catch (error) {\r\n            setloadFailure(true);\r\n        }\r\n    }, []); //ikinci parametresini [] boyle verince componentDidMount gibi calisiyor.\r\n\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card bg-light w-50 container\">\r\n                <h6>\r\n                    {t('Last Issues')}\r\n                </h6>\r\n                {issues.map((issue, index) => { //burada span'in rengi issue'nin sorununun ciddilige gore farklilik gosterecek sekilde ayarlanmali\r\n                    return (\r\n                        <Top3IssueLıstItem issue={issue} key={issue.id} />\r\n                    )\r\n                })}\r\n                <div className=\"text-center mt-2\">\r\n                    {pendingApiCall && //conditional rendering deniyor buna pendingApiCall dogruysa devamindaki calisir\r\n                        <Spinner></Spinner>\r\n                    }\r\n                    {loadFailure == true &&\r\n                        <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top3IssuesLıst;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssueLıstItem.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\JobWithIssuesComponent.js",["287"],"import React from 'react';\r\nimport { Col, Row, Alert } from 'react-bootstrap';\r\n\r\nconst JobWithIssuesComponent = (props) => {\r\n    const { jobWithIssues } = props;\r\n    const { highestImpactOfJob } = jobWithIssues;\r\n\r\n    let classOfJob = 'container bg-success';\r\n    if (highestImpactOfJob === 'LOW') {\r\n        classOfJob = 'container bg-primary';\r\n    } else if (highestImpactOfJob === 'MEDIUM') {\r\n        classOfJob = 'container bg-warning'\r\n    } else if (highestImpactOfJob === 'HIGH') {\r\n        classOfJob = 'container bg-danger';\r\n    }\r\n\r\n    return (\r\n        <Col xs={4} className=\"container text-white\" >\r\n            <div className={classOfJob}>\r\n                <Alert className=\"text-center\">\r\n                    {jobWithIssues.jobName}\r\n                </Alert>\r\n            </div>\r\n\r\n        </Col>\r\n    )\r\n\r\n}\r\nexport default JobWithIssuesComponent;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\issueApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssuesPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueList.js",["288","289","290","291","292"],"import React, { useState, useEffect } from 'react'\r\nimport { getIssues } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IssueListItem from './IssueListItem';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../Spinner';\r\nimport IssueFilter from './IssueFilter';\r\n\r\nconst IssueList = () => {\r\n\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        first: undefined,\r\n        last: undefined,\r\n        number: undefined\r\n    });\r\n\r\n    const [isFilteredFromFilter, setIsFilteredFromFilter] = useState(false);\r\n    const [issuesFilterFromFilter, setIssuesFilterFromFilter] = useState({\r\n        selectedFromDate: null,\r\n        selectedToDate: null,\r\n        appId: null,\r\n        status: null\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('/api/issue/issues'); //useEffect'ten sonra tanimlanirsa calismaz cunku sonrasin aldigimiz zaman o esnada artik request atilmis oluyo ve biz ondan sonra dinlemeye basliyoruz yani gec kalmis oluyoruz.\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadIssues(isFilteredFromFilter, issuesFilterFromFilter, nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadIssues(isFilteredFromFilter, issuesFilterFromFilter, previousPage);\r\n    }\r\n\r\n    const loadIssues = async (isFiltered = isFilteredFromFilter, filteredValues = issuesFilterFromFilter, page = 0) => {\r\n        try {\r\n            let response;\r\n            if (isFiltered === false) {\r\n                response = await getIssues(page, 5, undefined);\r\n            }\r\n            else {\r\n                response = await getIssues(page, 5, filteredValues);\r\n            }\r\n            setLoadFailure(false);\r\n            const { data } = response;\r\n            setPage(data);\r\n        } catch (error) {\r\n            setLoadFailure(true);\r\n        }\r\n        if (isFiltered) {\r\n            setIsFilteredFromFilter(isFiltered);\r\n        }\r\n        if (filteredValues) {\r\n            setIssuesFilterFromFilter({ ...filteredValues });\r\n        }\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    const { content: issues, first, last } = page;\r\n\r\n    let buttonsOrProgressBarDiv = (\r\n        <div>\r\n            {first === false && <button className=\"btn btn-sm btn-dark\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n            {last === false && <button className=\"btn btn-sm btn-dark float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n        </div>)\r\n\r\n    if (pendingApiCall) {\r\n        buttonsOrProgressBarDiv = (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <IssueFilter loadIssues={loadIssues}></IssueFilter>\r\n\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header text-center\">{t('Issues')}</h2>\r\n                <div className=\"list-group-flush\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">{t('Date')}</th>\r\n                                <th scope=\"col\">{t('App Name')}</th>\r\n                                <th scope=\"col\">{t('Job Name')}</th>\r\n                                <th scope=\"col\">{t('Impact')}</th>\r\n                                <th scope=\"col\">{t('Country')}</th>\r\n                                <th scope=\"col\">{t('Description')}</th>\r\n                                <th scope=\"col\">\r\n                                    <div >{t('Actions')}</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            {t('View')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Edit')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Delete')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Status')}\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {issues.map((issue, index) => {\r\n                                return (\r\n                                    <IssueListItem issue={issue} key={issue.id} />\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {buttonsOrProgressBarDiv}\r\n                {loadFailure == true &&\r\n                    <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IssueList;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueListItem.js",["293","294"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteIssueById, changeIssueStatusById } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst IssueListItem = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n    const { issue } = props;\r\n    const { name, createdDate, appShortName, jobName, impact, countryName, description, status, id } = issue;\r\n    const [errorMessage, seterrorMessage] = useState(undefined)\r\n    const [infoMessage, setInfoMessage] = useState(undefined);\r\n\r\n    const deleteButtonClicked = async () => {\r\n        setInfoMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        if (window.confirm(`Do you want to delete ${name}?`)) {\r\n            try {\r\n                const response = await deleteIssueById(id);;\r\n                //setInfoMessage(response.data); burayi yapcan\r\n                setInfoMessage(t('deleted'));\r\n            } catch (error) {\r\n                seterrorMessage(t('An Error Occured While deleting issue'))\r\n            }\r\n        }\r\n    }\r\n\r\n    const statusSwitchButtonChanged = async (status) => {\r\n        changeIssueStatusById({ status }, id);\r\n    }\r\n\r\n    if (infoMessage) {\r\n        return (\r\n            <tr>\r\n                <td colSpan=\"10\" className=\"alert-info text-center\">\r\n                    {infoMessage}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{createdDate}</td>\r\n                <td>{appShortName}</td>\r\n                <td>{jobName}</td>\r\n                <td>{impact}</td>\r\n                <td>{countryName}</td>\r\n                <td>{description}</td>\r\n                <td>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${true}` }}>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${false}` }}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                        </div>\r\n                        <button className=\"btn button-small btn-danger col-3\" onClick={() => { deleteButtonClicked() }}>\r\n                            <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                        </button>\r\n                        <div className=\"col-3\">\r\n                            <BootstrapSwitchButton\r\n                                onChange={(event) => { statusSwitchButtonChanged(event) }}\r\n                                checked={status}\r\n                                onlabel='ON'\r\n                                offlabel='OFF'\r\n                                onstyle=\"success\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n};\r\n\r\nexport default IssueListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\appApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssueDetailPage.js",["295"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getIssueById } from '../api/issueApiCalls';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IssueDetailsCard from '../components/IssueComponents/IssueDetailsCard';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\n\r\n\r\nconst IssueDetailPage = props => {\r\n    const [issue, setIssue] = useState({});\r\n    const [notFound, setNotFound] = useState(false);\r\n\r\n    //const { id } = props.match.params; //boyle almaktansa useParams ile almak daha iyi cunku eger App.js'de Route yaparak o hiyerarsiyi vermedigimiz bir yerden almamiz gerekirse bu sekilde aliriz.\r\n    const { id } = useParams();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const pendingApiCall = useApiProgress('/api/issue/' + id);\r\n\r\n    useEffect(() => {\r\n        loadIssue();\r\n    }, [id]) //id her degistiginde tetiklensin dedik\r\n\r\n    useEffect(() => {\r\n        setNotFound(false);\r\n    }, [issue])\r\n\r\n    const loadIssue = async () => {\r\n        try {\r\n            const response = await getIssueById(id);\r\n            setIssue(response.data);\r\n        } catch (error) {\r\n            setNotFound(true);\r\n        }\r\n    }\r\n\r\n    if (pendingApiCall) {\r\n        return (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    if (notFound) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faExclamationTriangle} />\r\n                    {t('Issue Not Found')}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {<IssueDetailsCard issue={issue} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IssueDetailPage;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueDetailsCard.js",["296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import React, { useState, useEffect } from 'react';\r\nimport { getImpactTypes, updateIssue } from '../../api/issueApiCalls';\r\nimport { getCountries } from '../../api/countryApiCalls';\r\nimport { getApps } from '../../api/appApiCalls';\r\nimport { getJobsByAppId } from '../../api/jobInterfaceApiCalls';\r\nimport { getServersByCountryId } from '../../api/serverApiCalls';\r\nimport { useParams } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst IssueDetailsCard = props => {\r\n\r\n    const { t } = useTranslation();\r\n    const routeParams = useParams();\r\n    const pathIssueId = routeParams.id;\r\n\r\n    var { disabled } = routeParams;\r\n    disabled = disabled == 'true';\r\n\r\n    const [issue, setIssue] = useState({});\r\n    const { id, name, description, impact, createdDate, appShortName, jobName, countryName, status, countryId, appId, serverId, serverName, jobInterfaceId } = props.issue;\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [successMessage, setSuccessMessage] = useState();\r\n\r\n    useEffect(() => {\r\n        setIssue({ ...props.issue });\r\n    }, [props.issue])\r\n\r\n    const [impactTypes, setImpactTypes] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [apps, setApps] = useState([]);\r\n    const [jobs, setJobs] = useState([]);\r\n    const [servers, setServers] = useState([]);\r\n    useEffect(() => {\r\n        loadImpactTypes(); //TODO: ayni istekten ikiser kere gidiyor arastir\r\n        loadCountries();\r\n        loadApps();\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        loadJobs(issue.appId);\r\n    }, [issue.appId])\r\n\r\n    useEffect(() => {\r\n        loadServers(issue.countryId)\r\n    }, [issue.countryId])\r\n\r\n    const loadImpactTypes = async () => {\r\n        try {\r\n            const response = await getImpactTypes();\r\n            setImpactTypes(response.data);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const loadCountries = async () => {\r\n        try {\r\n            const response = await getCountries();\r\n            setCountries(response.data);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const loadApps = async () => {\r\n        try {\r\n            const response = await getApps();\r\n            setApps(response.data);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const loadJobs = async (appId) => {\r\n        if (appId) {\r\n            try {\r\n                const response = await getJobsByAppId(appId);\r\n                setJobs(response.data);\r\n            } catch (error) {\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadServers = async (countryId) => {\r\n        if (countryId) {\r\n            try {\r\n                const response = await getServersByCountryId(countryId);\r\n                setServers(response.data);\r\n            } catch (error) {\r\n            }\r\n        }\r\n    }\r\n\r\n    const inputOnChanged = (event) => {\r\n        const { name, value } = event.target;\r\n        if (name == 'appId') {\r\n            setIssue({\r\n                ...issue,\r\n                [name]: value,\r\n                jobInterfaceId: ''\r\n            });\r\n            document.getElementById(\"jobInterfaceIdSelectList\").selectedIndex = 0;\r\n        }\r\n        else if (name == 'countryId') {\r\n            setIssue({\r\n                ...issue,\r\n                [name]: value,\r\n                serverId: ''\r\n            });\r\n            document.getElementById(\"serverIdSelectList\").selectedIndex = 0;\r\n        }\r\n        else {\r\n            setIssue({\r\n                ...issue,\r\n                [name]: value\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const updateButtonClicked = async () => {\r\n        setErrorMessage(undefined);\r\n        setSuccessMessage(undefined);\r\n        if (issue.jobInterfaceId !== '' && issue.serverId !== '') {\r\n            try {\r\n                const response = await updateIssue(issue);\r\n                setSuccessMessage(t('Updated Successfully'));\r\n            } catch (error) {\r\n                setErrorMessage(error.response.data.message);\r\n            }\r\n        }\r\n        else {\r\n            setErrorMessage(t('You Should Fill in the fields'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header text-center\">\r\n                <h2 className=\"\">{name}</h2>\r\n                <span>{t('Details')}</span>\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">id:</div>\r\n                            <div className=\"col-9\"><input disabled='true' className=\"form-control\" name='id' onChange={(event) => { inputOnChanged(event); }} defaultValue={id} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('name')}:</div>\r\n                            <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='name' onChange={(event) => { inputOnChanged(event); }} defaultValue={name} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Description')}:</div>\r\n                            <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='description' onChange={(event) => { inputOnChanged(event); }} defaultValue={description} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Impact')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='impact' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option>{impact}</option>\r\n                                    {impactTypes.map((impactFromApi, index) => {\r\n                                        if (impactFromApi !== impact) {\r\n                                            return (\r\n                                                <option key={index}>{impactFromApi}</option>\r\n                                            )\r\n                                        }\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('App Name')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='appId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    {apps.map((appFromApi, index) => {\r\n                                        return (\r\n                                            <option key={appFromApi.id} value={appFromApi.id} selected={appFromApi.id == appId}>{appFromApi.shortName}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\"> {t('Status')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='status' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option>{status == 'false' ? 'false' : 'true'}</option>\r\n                                    {status == true &&\r\n                                        <option value={false}>{false.toString()}</option>\r\n                                    }\r\n                                    {status == false &&\r\n                                        <option value={true}>{true.toString()}</option>\r\n                                    }\r\n\r\n                                </select></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Job Name')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select id=\"jobInterfaceIdSelectList\" disabled={disabled} className=\"form-control\" name='jobInterfaceId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option value=''>{t('Select One')}</option>\r\n                                    {jobs.map((jobFromApi, index) => {\r\n                                        return (\r\n                                            <option key={jobFromApi.id} value={jobFromApi.id} selected={jobFromApi.id == issue.jobInterfaceId}>{jobFromApi.name}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Country')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='countryId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    {countries.map((countryFromApi, index) => {\r\n                                        return (\r\n                                            <option key={index} value={countryFromApi.id} selected={countryFromApi.id == issue.countryId}>{countryFromApi.name}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Server')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select id=\"serverIdSelectList\" disabled={disabled} className=\"form-control\" name='serverId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option value=''>{t('Select One')}</option>\r\n                                    {servers.map((serverFromApi, index) => {\r\n                                        return (\r\n                                            <option key={serverFromApi.id} value={serverFromApi.id} selected={serverFromApi.id == issue.serverId}>{serverFromApi.name}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {errorMessage && <div className=\"alert-danger text-center\">{errorMessage}</div>}\r\n            {successMessage && <div className=\"alert-success text-center\">{successMessage}</div>}\r\n            <button hidden={disabled} className=\"btn btn-primary m-1\" onClick={() => { updateButtonClicked() }}>{t('Update')}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IssueDetailsCard;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Spinner.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\countryApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\jobInterfaceApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\serverApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueFilter.js",["318"],"import React, { useState, useEffect } from 'react'\r\nimport { getAppsDropList } from '../../api/appApiCalls';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst IssueFilter = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n    const { loadIssues } = props;\r\n    const [issuesFilter, setIssuesFilter] = useState({\r\n        selectedFromDate: null,\r\n        selectedToDate: null,\r\n        appId: null,\r\n        status: null\r\n    });\r\n\r\n    const [isFiltered, setIsFiltered] = useState(false);\r\n    useEffect(() => {\r\n        loadIssues(isFiltered, issuesFilter);\r\n    }, [isFiltered]);\r\n\r\n    const [apps, setApps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadApps();\r\n    }, []); //component didMount gibi calisir bu suan ama egerki 2. parametreye hic bir sey vermeseydik hem didmount hem de didupdate gibi calisirdi yani her degisiklikte calisirdi gibi bir anlama geliyor. ama mesela ikinci parametre olarak [param1,param2] gibi bisey deseydik param1 veya param2 degistigi zaman calis gibi bir anlami olurdu\r\n\r\n\r\n    const loadApps = async () => {\r\n        try {\r\n            const response = await getAppsDropList();\r\n            const { data } = response;\r\n            setApps(data);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <span className=\"mr-2\">Application:</span>\r\n                    <select className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" defaultValue=''\r\n                        onChange={\r\n                            (event) => {\r\n                                const copyIssuesFilter = { ...issuesFilter };\r\n                                copyIssuesFilter.appId = event.target.value;\r\n                                setIssuesFilter(copyIssuesFilter);\r\n                            }}>\r\n                        <option value=''>All</option>\r\n                        {apps.map((app, index) => {\r\n                            return (\r\n                                <option value={app.id}>{app.shortName}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <span className=\"mr-2\">Status:</span>\r\n                    <select className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" defaultValue='' onChange={\r\n                        (event) => {\r\n                            const copyIssuesFilter = { ...issuesFilter };\r\n                            copyIssuesFilter.status = event.target.value;\r\n                            setIssuesFilter(copyIssuesFilter);\r\n                        }}>\r\n                        <option value=''>All</option>\r\n                        <option value=\"true\">On</option>\r\n                        <option value=\"false\">Off</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <span>From:</span>\r\n                    <DatePicker className=\"m-1\"\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        selected={issuesFilter.selectedFromDate}\r\n                        onChange={date => {\r\n                            const copyIssuesFilter = { ...issuesFilter };\r\n                            copyIssuesFilter.selectedFromDate = date;\r\n                            setIssuesFilter(copyIssuesFilter);\r\n                        }}\r\n                        maxDate={issuesFilter.selectedToDate}\r\n                    />\r\n                    <FontAwesomeIcon icon={faCalendar} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <span>To:</span>\r\n                    <DatePicker className=\"m-1\"\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        selected={issuesFilter.selectedToDate}\r\n                        onChange={date => {\r\n                            const copyIssuesFilter = { ...issuesFilter };\r\n                            copyIssuesFilter.selectedToDate = date;\r\n                            setIssuesFilter(copyIssuesFilter);\r\n                        }}\r\n                        minDate={issuesFilter.selectedFromDate}\r\n                    />\r\n                    <FontAwesomeIcon icon={faCalendar} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={(event) => {\r\n                setIsFiltered(true);\r\n                loadIssues(isFiltered, issuesFilter);\r\n            }}>{t('Search')}</button>\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\r\n                setIsFiltered(false);\r\n                loadIssues(isFiltered, issuesFilter);\r\n            }}>{t('Remove Filter')}</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default IssueFilter;\r\n\r\n\r\n","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\ManagementPage.js",["319"],"import React, { useState, useEffect } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getAppsForManagementPage } from '../api/appApiCalls';\r\nimport ManagementPageListItem from '../components/ManagementPageComponents/ManagementPageListItem';\r\nimport Spinner from '../components/Spinner';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { Link } from 'react-router-dom'; //a etiketi yerine Link kullanma sebebimiz HashRouter yerine BrowserRouter kullanmak istersek ilerde sorun yasamamk icin yani hashrouter /# gibi bir etiket ekliyor cunku\r\n\r\n\r\n\r\nconst ManagementPage = () => {\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const { t } = useTranslation();\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        first: undefined,\r\n        last: undefined,\r\n        number: undefined\r\n    });\r\n    const { content: apps, first, last, number } = page;\r\n    const pendingApiCall = useApiProgress('/api/application/applicationForManagementPage', 'get'); //useEffect'ten sonra tanimlanirsa calismaz cunku sonrasin aldigimiz zaman o esnada artik request atilmis oluyo ve biz ondan sonra dinlemeye basliyoruz yani gec kalmis oluyoruz.\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = number + 1;\r\n        loadApps(nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = number - 1;\r\n        loadApps(previousPage);\r\n    }\r\n\r\n    const loadApps = async (page = 0) => {\r\n        try {\r\n            const response = await getAppsForManagementPage(page, 5);\r\n            const { data } = response;\r\n            setPage(data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadApps(number);\r\n    }, [number]);\r\n\r\n\r\n    let buttonsOrProgressBarDiv = (\r\n        <div>\r\n            {first === false && <button className=\"btn btn-sm btn-dark\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n            {last === false && <button className=\"btn btn-sm btn-dark float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n        </div>)\r\n\r\n    if (pendingApiCall) {\r\n        buttonsOrProgressBarDiv = (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header text-center\">{t('Management')}</h2>\r\n                <div className=\"list-group-flush\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">{t('Application Name')}</th>\r\n                                <th scope=\"col\">{t('Business Area')}</th>\r\n                                <th scope=\"col\">{t('Live Plants')}</th>\r\n                                <th scope=\"col\">{t('Line Stop Risk')}</th>\r\n                                <th scope=\"col\">\r\n                                    <div className=\"text-center\" >{t('Actions')}</div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            {t('View')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Edit')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Delete')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Track')}\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {apps.map((app, index) => {\r\n                                return (\r\n                                    <ManagementPageListItem app={app} key={app.id} />\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {buttonsOrProgressBarDiv}\r\n                {errorMessage && <div className=\"alert-danger text-center\">{errorMessage}</div>}\r\n            </div>\r\n\r\n            <div className=\"text-center m-2\">\r\n                <Link className=\"nav-link\" to={`/app/add`}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">{t('Add New App')}</button>\r\n                </Link>\r\n                <Link className=\"nav-link\" to={`/app/setup`}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">{t('Setup An Application On A Server')}</button>\r\n                </Link>\r\n                <Link className=\"nav-link\" to={`/app/addJobToAnApp`}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">{t('Add A Job To An App')}</button>\r\n                </Link>\r\n                <Link className=\"nav-link\" to={`/management/plants`}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">{t('Plant Management')}</button>\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagementPage;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ManagementPageComponents\\ManagementPageListItem.js",["320","321","322","323"],"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { changeLineStopRiskById, changeTrackById, deleteApplicationById } from '../../api/appApiCalls';\r\n\r\n\r\nconst ManagementPageListItem = (props) => {\r\n    const { t } = useTranslation();\r\n    const { app } = props;\r\n    let { id, shortName, businessAreaType, livePlants, lineStopRisk, track } = app;\r\n    const [lineStopRiskState, setlineStopRiskState] = useState(lineStopRisk)\r\n    const [trackState, setTrackState] = useState(track);\r\n\r\n    const [errorMessage, seterrorMessage] = useState(undefined)\r\n    const [infoMessage, setInfoMessage] = useState(undefined);\r\n\r\n    const changeLineStopRiskByIdFunc = async (id) => {\r\n        try {\r\n            const result = await changeLineStopRiskById(id);\r\n            setlineStopRiskState(!lineStopRiskState);\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const changeTrackByIdFunc = async (id) => {\r\n        try {\r\n            const result = await changeTrackById(id);\r\n            setTrackState(!trackState);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const deleteButtonClicked = async () => {\r\n        setInfoMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        if (window.confirm(`Do you want to delete ${shortName}?`)) {\r\n            try {\r\n                const response = await deleteApplicationById(id);;\r\n                //setInfoMessage(response.data); burayi yapcan\r\n                setInfoMessage(t('deleted'));\r\n            } catch (error) {\r\n                seterrorMessage(t('An Error Occured While deleting issue'))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (infoMessage) {\r\n        return (\r\n            <tr>\r\n                <td colSpan=\"10\" className=\"alert-info text-center\">\r\n                    {infoMessage}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{shortName}</td>\r\n                <td>{businessAreaType}</td>\r\n                <td>{livePlants}</td>\r\n                <td>\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={lineStopRiskState} id=\"flexCheckDefault\" value={lineStopRiskState} onChange={(event) => { changeLineStopRiskByIdFunc(id); }} />\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/app/${id}/${true}` }}>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/app/${id}/${false}` }}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                        </div>\r\n                        <button className=\"btn button-small btn-danger col-3\" onClick={() => { deleteButtonClicked(); }}>\r\n                            <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                        </button>\r\n                        <div className=\"col-3\">\r\n                            <BootstrapSwitchButton\r\n                                onChange={(event) => { changeTrackByIdFunc(id); }}\r\n                                checked={trackState}\r\n                                onlabel='ON'\r\n                                offlabel='OFF'\r\n                                onstyle=\"success\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default ManagementPageListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\AppDetailPage.js",["324","325","326","327","328","329","330"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport AppDetailsCard from '../components/AppDetailPageComponents/AppDetailCard';\r\nimport AppLinks from '../components/AppDetailPageComponents/AppLinks';\r\nimport FactoryManagementComponent from '../components/AppDetailPageComponents/FactoryManagementComponent';\r\nimport IssueManagementByAppCard from '../components/AppDetailPageComponents/IssueManagementByAppCard';\r\n\r\nconst AppDetailPage = props => {\r\n    const [issue, setIssue] = useState({});\r\n    const [notFound, setNotFound] = useState(false);\r\n    const { id, disabled } = useParams();\r\n    return (\r\n        <div>\r\n            <AppDetailsCard id={id} disabled={disabled}></AppDetailsCard>\r\n            <AppLinks id={id} disabled={disabled}></AppLinks>\r\n            <FactoryManagementComponent id={id} disabled={disabled}></FactoryManagementComponent>\r\n            <IssueManagementByAppCard id={id}></IssueManagementByAppCard>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default AppDetailPage;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppDetailCard.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getApplicationById, changeLineStopRiskById, getBusinessAreaTypes, updateApplication, addApplication } from '../../api/appApiCalls';\r\nimport { getAllTeams } from '../../api/teamApiCalls';\r\nimport { getUsersByTeamId } from '../../api/userApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../../components/Spinner';\r\nimport Input from '../../components/input'\r\n\r\n\r\n\r\n\r\nconst AppDetailsCard = props => {\r\n    const { id } = props;\r\n    let { disabled } = props;\r\n    disabled = disabled == 'true';\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [app, setApp] = useState({\r\n        lineStopRisk: false //yeni app eklerken sorun olmasin diye ekledim burda olmali bu\r\n    });\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const [error, setError] = useState({});\r\n    const [successMessage, setsuccessMessage] = useState();\r\n    const [businessAreaTypes, setbusinessAreaTypes] = useState([]);\r\n    const [users, setusers] = useState([]);\r\n    const [teams, setteams] = useState([]);\r\n    const [backends, setbackends] = useState([]);\r\n    const [frontends, setfrontends] = useState([]);\r\n    const [databases, setdatabases] = useState([]);\r\n\r\n    const pendingApiCall = useApiProgress('/api/application'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n\r\n    const getAppById = async (id) => {\r\n        if (id) {\r\n            try {\r\n                const result = await getApplicationById(id);\r\n                setApp(result.data);\r\n            } catch (error) {\r\n                console.log(error.response.data);\r\n                seterrorMessage(t('Something Went Wrong'));\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBusinessAreaTypesFunc = async () => {\r\n        try {\r\n            const result = await getBusinessAreaTypes();\r\n            setbusinessAreaTypes(result.data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getAllTeamsFunc = async () => {\r\n        try {\r\n            const result = await getAllTeams();\r\n            setteams(result.data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getUsersByTeamIdFunc = async (teamId) => {\r\n        if (teamId) {\r\n            try {\r\n                const result = await getUsersByTeamId(teamId);\r\n                setusers(result.data);\r\n            } catch (error) {\r\n                seterrorMessage(t('Something Went Wrong'));\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAppById(id);\r\n        getBusinessAreaTypesFunc();\r\n        getAllTeamsFunc();\r\n    }, [])\r\n    useEffect(() => {\r\n        getUsersByTeamIdFunc(app.responsibleTeamId);\r\n    }, [app.responsibleTeamId])\r\n\r\n    if (app) {\r\n        var { shortName, fullName, lineStopRisk, track, businessAreaType, releaseDate, responsibleUserName, responsibleUserId, responsibleTeamName, responsibleTeamId, backendId, backendName, frontendId, frontendName, databaseId, databaseName, lineOfBackendCode, lineOfFrontendCode } = app;\r\n    }\r\n\r\n    const changeLineStopRisk = () => {\r\n        setApp({\r\n            ...app,\r\n            lineStopRisk: !lineStopRisk\r\n        })\r\n    }\r\n\r\n    const inputOnChanged = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        seterrorMessage(undefined);\r\n        setsuccessMessage(undefined);\r\n        setError({\r\n            ...error,\r\n            [name]: undefined\r\n        })\r\n\r\n        if (name == 'responsibleTeamId') {\r\n            setApp({\r\n                ...app,\r\n                [name]: value,\r\n                responsibleUserId: ''\r\n            })\r\n\r\n        }\r\n        else {\r\n            setApp({\r\n                ...app,\r\n                [name]: value\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const updateButtonClicked = async () => {\r\n        setError({});\r\n        seterrorMessage(undefined);\r\n        setsuccessMessage(undefined);\r\n        try {\r\n            const response = await updateApplication(app);\r\n            setsuccessMessage(t('Updated Successfully'));\r\n        } catch (errorFromBackend) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n            setError(errorFromBackend.response.data.validationErrors);\r\n        }\r\n    }\r\n\r\n    const addButtonClicked = async () => {\r\n        setError({});\r\n        seterrorMessage(undefined);\r\n        setsuccessMessage(undefined);\r\n        try {\r\n            const response = await addApplication(app);\r\n            setsuccessMessage(t('App Added Successfully'));\r\n        } catch (errorFromBackend) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n            setError(errorFromBackend.response.data.validationErrors);\r\n        }\r\n    }\r\n\r\n    const { shortName: shortNameError, fullName: fullNameError, releaseDate: releaseDateError, businessAreaType: businessAreaTypeError, responsibleUserId: responsibleUserIdError, responsibleTeamId: responsibleTeamIdError } = error;\r\n\r\n    let updateOrAddButton;\r\n    if (app.id) {\r\n        updateOrAddButton = <button disabled={pendingApiCall} hidden={disabled == true} className=\"btn btn-primary m-1\" onClick={() => { updateButtonClicked(); }}>{t('Update')}</button>\r\n    }\r\n    else {\r\n        updateOrAddButton = <button disabled={pendingApiCall} hidden={disabled == true} className=\"btn btn-warning m-1\" onClick={() => { addButtonClicked(); }}>{t('Add')}</button>\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header text-center\">\r\n                    <h2 className=\"\">{shortName} - {fullName}</h2>\r\n                    <span>{t('Details')}</span>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row m-1\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Short Name:{disabled}</div>\r\n                                <div className=\"col-9\">\r\n                                    <input disabled={disabled} className={shortNameError ? \"form-control is-invalid\" : 'form-control'} name='shortName' onChange={(event) => { inputOnChanged(event); }} defaultValue={shortName} />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {shortNameError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Full Name:</div>\r\n                                <div className=\"col-9\">\r\n                                    <input disabled={disabled} className={fullNameError ? \"form-control is-invalid\" : 'form-control'} name='fullName' onChange={(event) => { inputOnChanged(event); }} defaultValue={fullName} />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {fullNameError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Release Date:</div>\r\n                                <div className=\"col-9\">\r\n                                    <DatePicker className={releaseDateError ? \"form-control is-invalid m-1\" : 'form-control m-1'}\r\n                                        dateFormat=\"yyyy-MM-dd\"\r\n                                        selected={Date.parse(releaseDate)}\r\n                                        onChange={date => {\r\n                                            const copyApp = { ...app };\r\n                                            copyApp.releaseDate = date;\r\n                                            setApp(copyApp);\r\n                                        }}\r\n                                        disabled={disabled}\r\n                                    />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {releaseDateError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Business Area:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className={businessAreaTypeError ? \"form-control is-invalid\" : 'form-control'} name='businessAreaType' value={app.businessAreaType} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        <option value=''>{t('Select One')}</option>\r\n                                        {businessAreaTypes.map((businesAreaTypeFromApi, index) => {\r\n                                            return (\r\n                                                <option key={index} value={businesAreaTypeFromApi} >{businesAreaTypeFromApi}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {businessAreaTypeError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Responsible:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} id='responsibleSelectList' className={responsibleUserIdError ? \"form-control is-invalid\" : 'form-control'} name='responsibleUserId' value={app.responsibleUserId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        <option value=''>{t('Select One')}</option>\r\n                                        {users.map((userFromApi, index) => {\r\n                                            return (\r\n                                                <option key={userFromApi.id} value={userFromApi.id} >{userFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {responsibleUserIdError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Responsible Team:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className={responsibleTeamIdError ? \"form-control is-invalid\" : 'form-control'} name='responsibleTeamId' value={app.responsibleTeamId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        <option value=''>{t('Select One')}</option>\r\n                                        {teams.map((teamFromApi, index) => {\r\n                                            return (\r\n                                                <option key={teamFromApi.id} value={teamFromApi.id} >{teamFromApi.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {responsibleTeamIdError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Backend:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className=\"form-control\" name='backendId' value={app.backendId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        {backends.map((backendFromApi, index) => {\r\n                                            return (\r\n                                                <option key={backendFromApi.id} value={backendFromApi.id}>{backendFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Line Count Of Backend Code:</div>\r\n                                <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='lineOfBackendCode' onChange={(event) => { inputOnChanged(event); }} defaultValue={lineOfBackendCode} /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Frontend:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className=\"form-control\" name='frontendId' value={app.frontendId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        {frontends.map((frontendFromApi, index) => {\r\n                                            return (\r\n                                                <option key={frontendFromApi.id} value={frontendFromApi.id}>{frontendFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Line Count Of Frontend Code:</div>\r\n                                <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='lineOfFrontendCode' onChange={(event) => { inputOnChanged(event); }} defaultValue={lineOfFrontendCode} /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Database:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className=\"form-control\" name='databaseId' value={app.databaseId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        {databases.map((databaseFromApi, index) => {\r\n                                            return (\r\n                                                <option key={databaseFromApi.id} value={databaseFromApi.id} >{databaseFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"form-check\">\r\n                                        <input disabled={disabled} name='lineStopRisk' className=\"form-check-input\" type=\"checkbox\" checked={lineStopRisk} id=\"flexCheckDefault\" value={lineStopRisk} onChange={(event) => { changeLineStopRisk(); }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-9\">Line Stop Risk(activate critical issue alarm)</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {successMessage && <div className=\"alert-success text-center\">{successMessage}</div>}\r\n                {updateOrAddButton}\r\n                {pendingApiCall && <Spinner></Spinner>}\r\n                {errorMessage && <div className=\"text-center alert-danger\">{errorMessage}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppDetailsCard;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\teamApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\userApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\backendApiCalls.js",[],["357","358"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\frontendApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\databaseApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppLinks.js",["359","360","361","362"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\linkApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\FactoryManagementComponent.js",["363","364","365","366","367","368"],"import React, { useState, useEffect } from 'react';\r\nimport { getManagementFactoriesByAppId, changeAliveByAppIdAndCountryId, changeTrackByAppIdAndCountryId } from '../../api/applicationCountryApiCalls';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../../components/Spinner';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FactoryManagementComponent = props => {\r\n    const { id, disabled } = props;\r\n\r\n    const [managementFactories, setManagementFactories] = useState([]);\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const [successMessage, setsuccessMessage] = useState();\r\n    const [checkboxChanged, setCheckboxChanged] = useState(false);\r\n    const [trackChanged, setTrackChanged] = useState(false);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const getManagementFactoriesAppByIdFunc = async (id) => {\r\n        try {\r\n            const result = await getManagementFactoriesByAppId(id);\r\n            setManagementFactories(result.data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const pendingApiCall = useApiProgress('/api/applicationCountry/getManagementFactoriesByAppId', 'get'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n    useEffect(() => {\r\n        getManagementFactoriesAppByIdFunc(id);\r\n    }, [id, checkboxChanged, trackChanged])\r\n\r\n\r\n    const changeAliveByAppIdAndCountryIdFunc = async (appId, countryId) => {\r\n        try {\r\n            const result = await changeAliveByAppIdAndCountryId({ appId: appId, countryId: countryId });\r\n            setCheckboxChanged(!checkboxChanged);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n\r\n    }\r\n\r\n    const changeTrackByAppIdAndCountryIdFunc = async (appId, countryId) => {\r\n        try {\r\n            const result = await changeTrackByAppIdAndCountryId({ appId: appId, countryId: countryId });\r\n            setTrackChanged(!trackChanged);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    if (pendingApiCall) {\r\n        return (<Spinner></Spinner>)\r\n    }\r\n    if (errorMessage) {\r\n        return (<div className=\"text-center alert-danger\">{errorMessage}</div>)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Factory Management</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Alive</th>\r\n                        <th scope=\"col\">Track</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {managementFactories.map((managementFactory, index) => {\r\n                        return (\r\n                            <tr key={managementFactory.countryDTO.id}>\r\n                                <td>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-check\">\r\n                                            <input disabled={disabled == 'true'} name='alive' className=\"form-check-input\" type=\"checkbox\" checked={managementFactory.alive} id=\"flexCheckDefault\" value={managementFactory.alive} onChange={(event) => { changeAliveByAppIdAndCountryIdFunc(id, managementFactory.countryDTO.id); }} />\r\n                                        </div>\r\n                                        {managementFactory.countryDTO.name}\r\n                                    </div>\r\n                                </td>\r\n                                <td><BootstrapSwitchButton\r\n                                    onChange={(event) => { changeTrackByAppIdAndCountryIdFunc(id, managementFactory.countryDTO.id); }}\r\n                                    checked={managementFactory.track}\r\n                                    onlabel='ON'\r\n                                    offlabel='OFF'\r\n                                    onstyle=\"success\"\r\n                                    disabled={disabled}\r\n                                /></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\nexport default FactoryManagementComponent;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\applicationCountryApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCard.js",["369","370"],"import React, { useState, useEffect } from 'react';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../../components/Spinner';\r\nimport { getIssuesByAppId } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IssueManagementByAppCardListItem from './IssueManagementByAppCardListItem';\r\n\r\n\r\nconst IssueManagementByAppCard = props => {\r\n    const { id, disabled } = props;\r\n\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        first: undefined,\r\n        last: undefined,\r\n        number: undefined\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n    const pendingApiCall = useApiProgress(`/api/issue/getByAppId/${id}`); //useEffect'ten sonra tanimlanirsa calismaz cunku sonrasin aldigimiz zaman o esnada artik request atilmis oluyo ve biz ondan sonra dinlemeye basliyoruz yani gec kalmis oluyoruz.\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        loadIssues(id);\r\n    }, [id])\r\n\r\n    const loadIssues = async (appId, page = 0) => {\r\n        try {\r\n            const response = await getIssuesByAppId(appId, page, 3);\r\n            setLoadFailure(false);\r\n            const { data } = response;\r\n            setPage(data);\r\n        } catch (error) {\r\n            setLoadFailure(true);\r\n        }\r\n\r\n    };\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadIssues(id, nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadIssues(id, previousPage);\r\n    }\r\n\r\n\r\n    const { content: issues, first, last } = page;\r\n\r\n    let buttonsOrProgressBarDiv = (\r\n        <div>\r\n            {first === false && <button className=\"btn btn-sm btn-dark\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n            {last === false && <button className=\"btn btn-sm btn-dark float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n        </div>)\r\n\r\n    if (pendingApiCall) {\r\n        buttonsOrProgressBarDiv = (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header text-center\">{t('Issues Management')}</h2>\r\n                <div className=\"list-group-flush\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">{t('Job Name')}</th>\r\n                                <th scope=\"col\">{t('Impact')}</th>\r\n                                <th scope=\"col\">{t('Description')}</th>\r\n                                <th scope=\"col\">\r\n                                    <div >{t('Actions')}</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            {t('View')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Edit')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Delete')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Track')}\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {issues.map((issue, index) => {\r\n                                return (\r\n                                    <IssueManagementByAppCardListItem key={issue.id} issue={issue} />\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {buttonsOrProgressBarDiv}\r\n                {loadFailure == true &&\r\n                    <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default IssueManagementByAppCard;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCardListItem.js",["371","372","373","374","375","376"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { deleteIssueById, changeIssueTrackById } from '../../api/issueApiCalls';\r\n\r\n\r\nconst IssueManagementByAppCardListItem = (props) => {\r\n    const { t } = useTranslation();\r\n    const { issue } = props;\r\n    const { name, createdDate, appShortName, jobName, impact, countryName, description, status, id, track } = issue;\r\n    const [errorMessage, seterrorMessage] = useState(undefined)\r\n    const [infoMessage, setInfoMessage] = useState(undefined);\r\n\r\n    const deleteButtonClicked = async () => {\r\n        setInfoMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        if (window.confirm(`Do you want to delete ${name}?`)) {\r\n            try {\r\n                const response = await deleteIssueById(id);;\r\n                //setInfoMessage(response.data); burayi yapcan\r\n                setInfoMessage(\"silindi\");\r\n            } catch (error) {\r\n                seterrorMessage(t('An Error Occured While deleting issue'))\r\n            }\r\n        }\r\n    }\r\n\r\n    const trackSwitchButtonChanged = async (track) => {\r\n        changeIssueTrackById({ track }, id);\r\n    }\r\n\r\n    if (infoMessage) {\r\n        return (\r\n            <tr>\r\n                <td colSpan=\"10\" className=\"alert-info text-center\">\r\n                    {infoMessage}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{jobName}</td>\r\n                <td>{impact}</td>\r\n                <td>{description}</td>\r\n                <td>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${true}` }}>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${false}` }}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                        </div>\r\n                        <button className=\"btn button-small btn-danger col-3\" onClick={() => { deleteButtonClicked(); }}>\r\n                            <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                        </button>\r\n                        <div className=\"col-3\">\r\n                            <BootstrapSwitchButton\r\n                                onChange={(event) => { trackSwitchButtonChanged(event) }}\r\n                                checked={track}\r\n                                onlabel='ON'\r\n                                offlabel='OFF'\r\n                                onstyle=\"success\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n};\r\nexport default IssueManagementByAppCardListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationHooks\\SetupApplicationHook.js",["377","378","379"],"import React, { useState, useEffect } from 'react';\r\nimport { setupApplicationInAServer, getAppsDropList } from '../../api/appApiCalls';\r\nimport { getCountries } from '../../api/countryApiCalls';\r\nimport { getServersByCountryId } from '../../api/serverApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../Spinner';\r\n\r\n\r\n\r\nconst SetupApplicationHook = props => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const [successMessage, setsuccessMessage] = useState();\r\n    const [error, setError] = useState({});\r\n\r\n    const pendingApiCall = useApiProgress('/api/application/setup'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n    const [apps, setApps] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [servers, setServers] = useState([]);\r\n    const [setupApplicationDTO, setSetupApplicationDTO] = useState({});\r\n    const { countryId } = setupApplicationDTO;\r\n    useEffect(() => {\r\n        getAppsDropListFunc();\r\n        getCountriesFunc();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getServersByCountryIdFunc(countryId);\r\n    }, [countryId])\r\n\r\n    const getAppsDropListFunc = async () => {\r\n        try {\r\n            const response = await getAppsDropList();\r\n            setApps(response.data);\r\n        } catch (backendError) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getCountriesFunc = async () => {\r\n        try {\r\n            const response = await getCountries();\r\n            setCountries(response.data);\r\n        } catch (backendError) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getServersByCountryIdFunc = async (countryId) => {\r\n        if (countryId) {\r\n            try {\r\n                const response = await getServersByCountryId(countryId);\r\n                setServers(response.data);\r\n            } catch (backendError) {\r\n                seterrorMessage(t('Something Went Wrong'));\r\n            }\r\n        }\r\n    }\r\n\r\n    const inputOnChanged = (event) => {\r\n        const { name, value } = event.target;\r\n        setsuccessMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        setError({\r\n            ...error,\r\n            [name]: undefined\r\n        })\r\n        setSetupApplicationDTO({\r\n            ...setupApplicationDTO,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const setUp = async () => {\r\n        try {\r\n            const response = await setupApplicationInAServer(setupApplicationDTO);\r\n            setsuccessMessage('Successfully Installed');\r\n        } catch (errorFromBackend) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n            setError(errorFromBackend.response.data.validationErrors);\r\n        }\r\n\r\n    }\r\n\r\n    const { appId: appIdError, countryId: countryIdError, serverId: serverIdError } = error;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>{t('Setup An Application On A Server')}</h2>\r\n            <hr />\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-3\">\r\n                    {t('Application Name')}:\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <select className={appIdError ? \"form-control is-invalid\" : 'form-control'} name='appId' value={setupApplicationDTO.appId} onChange={(event) => { inputOnChanged(event); }}>\r\n                        <option value=''>{t('Select One')}</option>\r\n                        {apps.map((app, index) => {\r\n                            return (\r\n                                <option key={index} value={app.id} >{app.shortName}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <div className=\"invalid-feedback\">\r\n                        {appIdError}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-3\">\r\n                    {t('Country')}:\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <select className={countryIdError ? \"form-control is-invalid\" : 'form-control'} name='countryId' value={setupApplicationDTO.countryId} onChange={(event) => { inputOnChanged(event); }}>\r\n                        <option value=''>{t('Select One')}</option>\r\n                        {countries.map((country, index) => {\r\n                            return (\r\n                                <option key={country.id} value={country.id} >{country.name}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <div className=\"invalid-feedback\">\r\n                        {countryIdError}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-3\">\r\n                    {t('Server')}:\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <select className={serverIdError ? \"form-control is-invalid\" : 'form-control'} name='serverId' value={setupApplicationDTO.serverId} onChange={(event) => { inputOnChanged(event); }}>\r\n                        <option value=''>{t('Select One')}</option>\r\n                        {servers.map((server, index) => {\r\n                            return (\r\n                                <option key={server.id} value={server.id} >{server.name}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <div className=\"invalid-feedback\">\r\n                        {serverIdError}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-center m-2\">\r\n                {errorMessage && <div className=\"alert-danger text-center\">{errorMessage}</div>}\r\n                {successMessage && <div className=\"alert-success text-center\">{successMessage}</div>}\r\n                <button disabled={pendingApiCall} type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={() => { setUp() }}>{t('Setup')}</button>\r\n                {pendingApiCall && <Spinner></Spinner>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetupApplicationHook;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\JobInterfaceHooks\\AddJobInterfaceHook.js",["380","381","382","383"],"import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../Spinner';\r\nimport { addJobInterface } from '../../api/jobInterfaceApiCalls';\r\nimport { getAppsDropList } from '../../api/appApiCalls';\r\n\r\nconst AddJobInterfaceHook = props => {\r\n    const { t } = useTranslation();\r\n\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const [successMessage, setsuccessMessage] = useState();\r\n    const [addAJobInterfaceToAnApplicationDTO, setAddAJobInterfaceToAnApplicationDTO] = useState({\r\n        appId: undefined,\r\n        jobInterfaceName: undefined\r\n    });\r\n    const [apps, setApps] = useState([]);\r\n\r\n    const pendingApiCall = useApiProgress('/api/jobInterface', 'post'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n    useEffect(() => {\r\n        getAppsDropListFunc();\r\n    }, [])\r\n\r\n    const addJobInterfaceFunc = async (body) => {\r\n        try {\r\n            const result = await addJobInterface(body);\r\n            setsuccessMessage(t('Job Added Successfully'));\r\n        } catch (backendApiError) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getAppsDropListFunc = async () => {\r\n        try {\r\n            const response = await getAppsDropList();\r\n            setApps(response.data);\r\n        } catch (backendError) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const inputOnChanged = (event) => {\r\n        const { name, value } = event.target;\r\n        setsuccessMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        setAddAJobInterfaceToAnApplicationDTO({\r\n            ...addAJobInterfaceToAnApplicationDTO,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>{t('Add A Job To An App')}</h2>\r\n            <hr />\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-3\">\r\n                    {t('Application Name')}:\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <select className='form-control' name='appId' value={addAJobInterfaceToAnApplicationDTO.appId} onChange={(event) => { inputOnChanged(event); }}>\r\n                        <option value=''>{t('Select One')}</option>\r\n                        {apps.map((app, index) => {\r\n                            return (\r\n                                <option key={index} value={app.id} >{app.shortName}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-3\">{t('Job Name')}:</div>\r\n                <div className=\"col-9\"><input className=\"form-control\" name='jobInterfaceName' onChange={(event) => { inputOnChanged(event); }} /></div>\r\n            </div>\r\n            <button disabled={pendingApiCall} type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={() => { addJobInterfaceFunc(addAJobInterfaceToAnApplicationDTO) }}>{t('Add')}</button>\r\n            {pendingApiCall && <Spinner></Spinner>}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddJobInterfaceHook;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ServerManagementHooks\\PlantManagementTable.js",["384","385"],"import React, { useState, useEffect } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { findAllForPlantManagementTable } from '../../api/serverApiCalls';\r\nimport Spinner from '../../components/Spinner';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport { Link } from 'react-router-dom'; //a etiketi yerine Link kullanma sebebimiz HashRouter yerine BrowserRouter kullanmak istersek ilerde sorun yasamamk icin yani hashrouter /# gibi bir etiket ekliyor cunku\r\nimport PlantManagementTableListItem from './PlantManagementTableListItem';\r\n\r\nconst PlantManagementTable = () => {\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const { t } = useTranslation();\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        first: undefined,\r\n        last: undefined,\r\n        number: undefined\r\n    });\r\n    const { content: servers, first, last, number } = page;\r\n    const pendingApiCall = useApiProgress('/api/server/management', 'get'); //useEffect'ten sonra tanimlanirsa calismaz cunku sonrasin aldigimiz zaman o esnada artik request atilmis oluyo ve biz ondan sonra dinlemeye basliyoruz yani gec kalmis oluyoruz.\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = number + 1;\r\n        loadServers(nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = number - 1;\r\n        loadServers(previousPage);\r\n    }\r\n\r\n    const loadServers = async (page = 0) => {\r\n        try {\r\n            const response = await findAllForPlantManagementTable(page, 5);\r\n            const { data } = response;\r\n            setPage(data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadServers();\r\n    }, []);\r\n\r\n    let buttonsOrProgressBarDiv = (\r\n        <div>\r\n            {first === false && <button className=\"btn btn-sm btn-dark\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n            {last === false && <button className=\"btn btn-sm btn-dark float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n        </div>)\r\n\r\n    if (pendingApiCall) {\r\n        buttonsOrProgressBarDiv = (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header text-center\">Plant Management</h2>\r\n                <div className=\"list-group-flush\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">{t('Country')}</th>\r\n                                <th scope=\"col\">{t('Short Code')}</th>\r\n                                <th scope=\"col\">{t('Full Name')}</th>\r\n                                <th scope=\"col\">{t('Live App Count')}</th>\r\n                                <th scope=\"col\">\r\n                                    <div className=\"text-center\" >{t('Actions')}</div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            {t('Delete')}\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {servers.map((server, index) => {\r\n                                return (\r\n                                    <PlantManagementTableListItem server={server} key={server.id} />\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {buttonsOrProgressBarDiv}\r\n                {errorMessage && <div className=\"alert-danger text-center\">{errorMessage}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PlantManagementTable;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ServerManagementHooks\\PlantManagementTableListItem.js",["386","387","388","389","390","391"],"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteServerById } from '../../api/serverApiCalls';\r\n\r\nconst PlantManagementTableListItem = (props) => {\r\n    const { t } = useTranslation();\r\n    const { server } = props;\r\n    let { id, name, shortCode, countryId, countryName, liveAppCount } = server;\r\n\r\n    const [errorMessage, seterrorMessage] = useState(undefined)\r\n    const [infoMessage, setInfoMessage] = useState(undefined);\r\n\r\n    const deleteButtonClicked = async () => {\r\n        setInfoMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        if (window.confirm(`Do you want to delete ${name}?`)) {\r\n            try {\r\n                const response = await deleteServerById(id);;\r\n                console.log(response.data);\r\n                //setInfoMessage(response.data); burayi yapcan\r\n                setInfoMessage(t('deleted'));\r\n            } catch (error) {\r\n                seterrorMessage(t('An Error Occured While deleting issue'))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    if (infoMessage) {\r\n        return (\r\n            <tr>\r\n                <td colSpan=\"10\" className=\"alert-info text-center\">\r\n                    {infoMessage}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{countryName}</td>\r\n                <td>{shortCode}</td>\r\n                <td>{name}</td>\r\n                <td>{liveAppCount}</td>\r\n                <td>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn button-small btn-danger col-3\" onClick={() => { deleteButtonClicked(); }}>\r\n                            <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlantManagementTableListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\LinkPage.js",["392","393"],"import React, { useEffect, useState } from 'react';\r\nimport LinksCard from '../components/LinkPageHooks/LinksCard';\r\n\r\n\r\nconst LinkPage = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <LinksCard></LinksCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinkPage;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\LinkPageHooks\\LinksCard.js",["394","395","396","397","398","399"],{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":26,"column":17,"nodeType":"406","messageId":"407","endLine":26,"endColumn":25},{"ruleId":"404","severity":1,"message":"405","line":93,"column":17,"nodeType":"406","messageId":"407","endLine":93,"endColumn":25},{"ruleId":"408","severity":1,"message":"409","line":5,"column":54,"nodeType":"410","messageId":"411","endLine":5,"endColumn":61},{"ruleId":"408","severity":1,"message":"412","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},{"ruleId":"408","severity":1,"message":"414","line":28,"column":31,"nodeType":"410","messageId":"411","endLine":28,"endColumn":35},{"ruleId":"408","severity":1,"message":"415","line":28,"column":37,"nodeType":"410","messageId":"411","endLine":28,"endColumn":45},{"ruleId":"408","severity":1,"message":"416","line":28,"column":47,"nodeType":"410","messageId":"411","endLine":28,"endColumn":54},{"ruleId":"417","severity":1,"message":"418","line":88,"column":29,"nodeType":"419","endLine":88,"endColumn":178},{"ruleId":"420","severity":1,"message":"421","line":19,"column":15,"nodeType":"422","endLine":27,"endColumn":6},{"ruleId":"423","severity":1,"message":"424","line":41,"column":30,"nodeType":"425","messageId":"407","endLine":41,"endColumn":32},{"ruleId":"408","severity":1,"message":"426","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":13},{"ruleId":"408","severity":1,"message":"427","line":2,"column":22,"nodeType":"410","messageId":"411","endLine":2,"endColumn":25},{"ruleId":"408","severity":1,"message":"427","line":2,"column":22,"nodeType":"410","messageId":"411","endLine":2,"endColumn":25},{"ruleId":"420","severity":1,"message":"421","line":14,"column":15,"nodeType":"422","endLine":22,"endColumn":6},{"ruleId":"423","severity":1,"message":"424","line":40,"column":34,"nodeType":"425","messageId":"407","endLine":40,"endColumn":36},{"ruleId":"408","severity":1,"message":"427","line":2,"column":15,"nodeType":"410","messageId":"411","endLine":2,"endColumn":18},{"ruleId":"408","severity":1,"message":"428","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"429","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":18},{"ruleId":"408","severity":1,"message":"430","line":8,"column":10,"nodeType":"410","messageId":"411","endLine":8,"endColumn":25},{"ruleId":"408","severity":1,"message":"431","line":9,"column":10,"nodeType":"410","messageId":"411","endLine":9,"endColumn":20},{"ruleId":"423","severity":1,"message":"424","line":128,"column":30,"nodeType":"425","messageId":"407","endLine":128,"endColumn":32},{"ruleId":"408","severity":1,"message":"432","line":15,"column":12,"nodeType":"410","messageId":"411","endLine":15,"endColumn":24},{"ruleId":"408","severity":1,"message":"433","line":23,"column":23,"nodeType":"410","messageId":"411","endLine":23,"endColumn":31},{"ruleId":"420","severity":1,"message":"434","line":25,"column":8,"nodeType":"435","endLine":25,"endColumn":12,"suggestions":"436"},{"ruleId":"408","severity":1,"message":"429","line":8,"column":8,"nodeType":"410","messageId":"411","endLine":8,"endColumn":18},{"ruleId":"408","severity":1,"message":"437","line":17,"column":11,"nodeType":"410","messageId":"411","endLine":17,"endColumn":22},{"ruleId":"423","severity":1,"message":"424","line":20,"column":25,"nodeType":"425","messageId":"407","endLine":20,"endColumn":27},{"ruleId":"408","severity":1,"message":"438","line":23,"column":44,"nodeType":"410","messageId":"411","endLine":23,"endColumn":55},{"ruleId":"408","severity":1,"message":"439","line":23,"column":57,"nodeType":"410","messageId":"411","endLine":23,"endColumn":69},{"ruleId":"408","severity":1,"message":"440","line":23,"column":71,"nodeType":"410","messageId":"411","endLine":23,"endColumn":78},{"ruleId":"408","severity":1,"message":"441","line":23,"column":80,"nodeType":"410","messageId":"411","endLine":23,"endColumn":91},{"ruleId":"408","severity":1,"message":"442","line":23,"column":101,"nodeType":"410","messageId":"411","endLine":23,"endColumn":110},{"ruleId":"408","severity":1,"message":"443","line":23,"column":119,"nodeType":"410","messageId":"411","endLine":23,"endColumn":127},{"ruleId":"408","severity":1,"message":"444","line":23,"column":129,"nodeType":"410","messageId":"411","endLine":23,"endColumn":139},{"ruleId":"408","severity":1,"message":"445","line":23,"column":141,"nodeType":"410","messageId":"411","endLine":23,"endColumn":155},{"ruleId":"423","severity":1,"message":"424","line":97,"column":18,"nodeType":"425","messageId":"407","endLine":97,"endColumn":20},{"ruleId":"423","severity":1,"message":"424","line":105,"column":23,"nodeType":"425","messageId":"407","endLine":105,"endColumn":25},{"ruleId":"408","severity":1,"message":"433","line":128,"column":23,"nodeType":"410","messageId":"411","endLine":128,"endColumn":31},{"ruleId":"446","severity":1,"message":"447","line":180,"column":77,"nodeType":"422","messageId":"448","endLine":180,"endColumn":79},{"ruleId":"423","severity":1,"message":"424","line":204,"column":119,"nodeType":"425","messageId":"407","endLine":204,"endColumn":121},{"ruleId":"423","severity":1,"message":"424","line":217,"column":53,"nodeType":"425","messageId":"407","endLine":217,"endColumn":55},{"ruleId":"423","severity":1,"message":"424","line":218,"column":45,"nodeType":"425","messageId":"407","endLine":218,"endColumn":47},{"ruleId":"423","severity":1,"message":"424","line":221,"column":45,"nodeType":"425","messageId":"407","endLine":221,"endColumn":47},{"ruleId":"423","severity":1,"message":"424","line":241,"column":119,"nodeType":"425","messageId":"407","endLine":241,"endColumn":121},{"ruleId":"423","severity":1,"message":"424","line":257,"column":119,"nodeType":"425","messageId":"407","endLine":257,"endColumn":121},{"ruleId":"423","severity":1,"message":"424","line":277,"column":128,"nodeType":"425","messageId":"407","endLine":277,"endColumn":130},{"ruleId":"420","severity":1,"message":"449","line":24,"column":8,"nodeType":"435","endLine":24,"endColumn":20,"suggestions":"450"},{"ruleId":"420","severity":1,"message":"451","line":45,"column":8,"nodeType":"435","endLine":45,"endColumn":16,"suggestions":"452"},{"ruleId":"408","severity":1,"message":"432","line":17,"column":12,"nodeType":"410","messageId":"411","endLine":17,"endColumn":24},{"ruleId":"408","severity":1,"message":"453","line":22,"column":19,"nodeType":"410","messageId":"411","endLine":22,"endColumn":25},{"ruleId":"408","severity":1,"message":"453","line":32,"column":19,"nodeType":"410","messageId":"411","endLine":32,"endColumn":25},{"ruleId":"408","severity":1,"message":"433","line":44,"column":23,"nodeType":"410","messageId":"411","endLine":44,"endColumn":31},{"ruleId":"408","severity":1,"message":"428","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"454","line":3,"column":10,"nodeType":"410","messageId":"411","endLine":3,"endColumn":24},{"ruleId":"408","severity":1,"message":"455","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":15},{"ruleId":"408","severity":1,"message":"456","line":11,"column":12,"nodeType":"410","messageId":"411","endLine":11,"endColumn":17},{"ruleId":"408","severity":1,"message":"457","line":11,"column":19,"nodeType":"410","messageId":"411","endLine":11,"endColumn":27},{"ruleId":"408","severity":1,"message":"458","line":12,"column":12,"nodeType":"410","messageId":"411","endLine":12,"endColumn":20},{"ruleId":"408","severity":1,"message":"459","line":12,"column":22,"nodeType":"410","messageId":"411","endLine":12,"endColumn":33},{"ruleId":"408","severity":1,"message":"460","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":19},{"ruleId":"408","severity":1,"message":"461","line":3,"column":30,"nodeType":"410","messageId":"411","endLine":3,"endColumn":52},{"ruleId":"408","severity":1,"message":"462","line":11,"column":8,"nodeType":"410","messageId":"411","endLine":11,"endColumn":13},{"ruleId":"423","severity":1,"message":"424","line":19,"column":25,"nodeType":"425","messageId":"407","endLine":19,"endColumn":27},{"ruleId":"408","severity":1,"message":"463","line":32,"column":22,"nodeType":"410","messageId":"411","endLine":32,"endColumn":33},{"ruleId":"408","severity":1,"message":"464","line":33,"column":23,"nodeType":"410","messageId":"411","endLine":33,"endColumn":35},{"ruleId":"408","severity":1,"message":"465","line":34,"column":23,"nodeType":"410","messageId":"411","endLine":34,"endColumn":35},{"ruleId":"420","severity":1,"message":"466","line":84,"column":8,"nodeType":"435","endLine":84,"endColumn":10,"suggestions":"467"},{"ruleId":"420","severity":1,"message":"468","line":87,"column":8,"nodeType":"435","endLine":87,"endColumn":31,"suggestions":"469"},{"ruleId":"408","severity":1,"message":"470","line":90,"column":50,"nodeType":"410","messageId":"411","endLine":90,"endColumn":55},{"ruleId":"408","severity":1,"message":"471","line":90,"column":57,"nodeType":"410","messageId":"411","endLine":90,"endColumn":73},{"ruleId":"408","severity":1,"message":"472","line":90,"column":88,"nodeType":"410","messageId":"411","endLine":90,"endColumn":107},{"ruleId":"408","severity":1,"message":"473","line":90,"column":109,"nodeType":"410","messageId":"411","endLine":90,"endColumn":126},{"ruleId":"408","severity":1,"message":"474","line":90,"column":128,"nodeType":"410","messageId":"411","endLine":90,"endColumn":147},{"ruleId":"408","severity":1,"message":"475","line":90,"column":149,"nodeType":"410","messageId":"411","endLine":90,"endColumn":166},{"ruleId":"408","severity":1,"message":"476","line":90,"column":168,"nodeType":"410","messageId":"411","endLine":90,"endColumn":177},{"ruleId":"408","severity":1,"message":"477","line":90,"column":179,"nodeType":"410","messageId":"411","endLine":90,"endColumn":190},{"ruleId":"408","severity":1,"message":"478","line":90,"column":192,"nodeType":"410","messageId":"411","endLine":90,"endColumn":202},{"ruleId":"408","severity":1,"message":"479","line":90,"column":204,"nodeType":"410","messageId":"411","endLine":90,"endColumn":216},{"ruleId":"408","severity":1,"message":"480","line":90,"column":218,"nodeType":"410","messageId":"411","endLine":90,"endColumn":228},{"ruleId":"408","severity":1,"message":"481","line":90,"column":230,"nodeType":"410","messageId":"411","endLine":90,"endColumn":242},{"ruleId":"423","severity":1,"message":"424","line":110,"column":18,"nodeType":"425","messageId":"407","endLine":110,"endColumn":20},{"ruleId":"408","severity":1,"message":"433","line":132,"column":19,"nodeType":"410","messageId":"411","endLine":132,"endColumn":27},{"ruleId":"408","severity":1,"message":"433","line":145,"column":19,"nodeType":"410","messageId":"411","endLine":145,"endColumn":27},{"ruleId":"423","severity":1,"message":"424","line":157,"column":80,"nodeType":"425","messageId":"407","endLine":157,"endColumn":82},{"ruleId":"423","severity":1,"message":"424","line":160,"column":80,"nodeType":"425","messageId":"407","endLine":160,"endColumn":82},{"ruleId":"400","replacedBy":"482"},{"ruleId":"402","replacedBy":"483"},{"ruleId":"408","severity":1,"message":"460","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":19},{"ruleId":"408","severity":1,"message":"484","line":4,"column":27,"nodeType":"410","messageId":"411","endLine":4,"endColumn":36},{"ruleId":"408","severity":1,"message":"426","line":4,"column":43,"nodeType":"410","messageId":"411","endLine":4,"endColumn":46},{"ruleId":"420","severity":1,"message":"485","line":33,"column":8,"nodeType":"435","endLine":33,"endColumn":12,"suggestions":"486"},{"ruleId":"408","severity":1,"message":"487","line":13,"column":12,"nodeType":"410","messageId":"411","endLine":13,"endColumn":26},{"ruleId":"408","severity":1,"message":"488","line":13,"column":28,"nodeType":"410","messageId":"411","endLine":13,"endColumn":45},{"ruleId":"420","severity":1,"message":"489","line":32,"column":8,"nodeType":"435","endLine":32,"endColumn":43,"suggestions":"490"},{"ruleId":"408","severity":1,"message":"453","line":37,"column":19,"nodeType":"410","messageId":"411","endLine":37,"endColumn":25},{"ruleId":"408","severity":1,"message":"453","line":47,"column":19,"nodeType":"410","messageId":"411","endLine":47,"endColumn":25},{"ruleId":"423","severity":1,"message":"424","line":77,"column":71,"nodeType":"425","messageId":"407","endLine":77,"endColumn":73},{"ruleId":"408","severity":1,"message":"491","line":10,"column":17,"nodeType":"410","messageId":"411","endLine":10,"endColumn":25},{"ruleId":"423","severity":1,"message":"424","line":104,"column":30,"nodeType":"425","messageId":"407","endLine":104,"endColumn":32},{"ruleId":"408","severity":1,"message":"438","line":13,"column":19,"nodeType":"410","messageId":"411","endLine":13,"endColumn":30},{"ruleId":"408","severity":1,"message":"439","line":13,"column":32,"nodeType":"410","messageId":"411","endLine":13,"endColumn":44},{"ruleId":"408","severity":1,"message":"441","line":13,"column":63,"nodeType":"410","messageId":"411","endLine":13,"endColumn":74},{"ruleId":"408","severity":1,"message":"492","line":13,"column":89,"nodeType":"410","messageId":"411","endLine":13,"endColumn":95},{"ruleId":"408","severity":1,"message":"432","line":14,"column":12,"nodeType":"410","messageId":"411","endLine":14,"endColumn":24},{"ruleId":"408","severity":1,"message":"433","line":22,"column":23,"nodeType":"410","messageId":"411","endLine":22,"endColumn":31},{"ruleId":"420","severity":1,"message":"493","line":29,"column":8,"nodeType":"435","endLine":29,"endColumn":10,"suggestions":"494"},{"ruleId":"420","severity":1,"message":"495","line":33,"column":8,"nodeType":"435","endLine":33,"endColumn":19,"suggestions":"496"},{"ruleId":"408","severity":1,"message":"433","line":80,"column":19,"nodeType":"410","messageId":"411","endLine":80,"endColumn":27},{"ruleId":"408","severity":1,"message":"432","line":11,"column":12,"nodeType":"410","messageId":"411","endLine":11,"endColumn":24},{"ruleId":"408","severity":1,"message":"487","line":12,"column":12,"nodeType":"410","messageId":"411","endLine":12,"endColumn":26},{"ruleId":"420","severity":1,"message":"497","line":23,"column":8,"nodeType":"435","endLine":23,"endColumn":10,"suggestions":"498"},{"ruleId":"408","severity":1,"message":"453","line":27,"column":19,"nodeType":"410","messageId":"411","endLine":27,"endColumn":25},{"ruleId":"408","severity":1,"message":"499","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":14},{"ruleId":"420","severity":1,"message":"500","line":43,"column":8,"nodeType":"435","endLine":43,"endColumn":10,"suggestions":"501"},{"ruleId":"408","severity":1,"message":"502","line":4,"column":10,"nodeType":"410","messageId":"411","endLine":4,"endColumn":16},{"ruleId":"408","severity":1,"message":"503","line":4,"column":18,"nodeType":"410","messageId":"411","endLine":4,"endColumn":23},{"ruleId":"408","severity":1,"message":"504","line":5,"column":8,"nodeType":"410","messageId":"411","endLine":5,"endColumn":29},{"ruleId":"408","severity":1,"message":"499","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":14},{"ruleId":"408","severity":1,"message":"442","line":12,"column":32,"nodeType":"410","messageId":"411","endLine":12,"endColumn":41},{"ruleId":"408","severity":1,"message":"432","line":14,"column":12,"nodeType":"410","messageId":"411","endLine":14,"endColumn":24},{"ruleId":"408","severity":1,"message":"428","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},{"ruleId":"408","severity":1,"message":"505","line":1,"column":28,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"484","line":6,"column":27,"nodeType":"410","messageId":"411","endLine":6,"endColumn":36},{"ruleId":"408","severity":1,"message":"427","line":6,"column":38,"nodeType":"410","messageId":"411","endLine":6,"endColumn":41},{"ruleId":"408","severity":1,"message":"426","line":6,"column":43,"nodeType":"410","messageId":"411","endLine":6,"endColumn":46},{"ruleId":"408","severity":1,"message":"487","line":13,"column":12,"nodeType":"410","messageId":"411","endLine":13,"endColumn":26},{"ruleId":"408","severity":1,"message":"488","line":13,"column":28,"nodeType":"410","messageId":"411","endLine":13,"endColumn":45},{"ruleId":"420","severity":1,"message":"506","line":21,"column":8,"nodeType":"435","endLine":21,"endColumn":10,"suggestions":"507"},"no-native-reassign",["508"],"no-negated-in-lhs",["509"],"no-dupe-keys","Duplicate key 'Issues'.","ObjectExpression","unexpected","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'Component' is defined but never used.","'name' is assigned a value but never used.","'password' is assigned a value but never used.","'surname' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Col' is defined but never used.","'Row' is defined but never used.","'useEffect' is defined but never used.","'DatePicker' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCalendar' is defined but never used.","'errorMessage' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadIssue'. Either include it or remove the dependency array.","ArrayExpression",["510"],"'pathIssueId' is assigned a value but never used.","'createdDate' is assigned a value but never used.","'appShortName' is assigned a value but never used.","'jobName' is assigned a value but never used.","'countryName' is assigned a value but never used.","'countryId' is assigned a value but never used.","'serverId' is assigned a value but never used.","'serverName' is assigned a value but never used.","'jobInterfaceId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'issuesFilter' and 'loadIssues'. Either include them or remove the dependency array.",["511"],"React Hook useEffect has a missing dependency: 'loadApps'. Either include it or remove the dependency array.",["512"],"'result' is assigned a value but never used.","'useApiProgress' is defined but never used.","'Spinner' is defined but never used.","'issue' is assigned a value but never used.","'setIssue' is assigned a value but never used.","'notFound' is assigned a value but never used.","'setNotFound' is assigned a value but never used.","'useParams' is defined but never used.","'changeLineStopRiskById' is defined but never used.","'Input' is defined but never used.","'setbackends' is assigned a value but never used.","'setfrontends' is assigned a value but never used.","'setdatabases' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllTeamsFunc', 'getAppById', 'getBusinessAreaTypesFunc', and 'id'. Either include them or remove the dependency array.",["513"],"React Hook useEffect has a missing dependency: 'getUsersByTeamIdFunc'. Either include it or remove the dependency array.",["514"],"'track' is assigned a value but never used.","'businessAreaType' is assigned a value but never used.","'responsibleUserName' is assigned a value but never used.","'responsibleUserId' is assigned a value but never used.","'responsibleTeamName' is assigned a value but never used.","'responsibleTeamId' is assigned a value but never used.","'backendId' is assigned a value but never used.","'backendName' is assigned a value but never used.","'frontendId' is assigned a value but never used.","'frontendName' is assigned a value but never used.","'databaseId' is assigned a value but never used.","'databaseName' is assigned a value but never used.",["508"],["509"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'getJobsByAppIdFunc'. Either include it or remove the dependency array.",["515"],"'successMessage' is assigned a value but never used.","'setsuccessMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getManagementFactoriesAppByIdFunc'. Either include it or remove the dependency array.",["516"],"'disabled' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAppsDropListFunc' and 'getCountriesFunc'. Either include them or remove the dependency array.",["517"],"React Hook useEffect has a missing dependency: 'getServersByCountryIdFunc'. Either include it or remove the dependency array.",["518"],"React Hook useEffect has a missing dependency: 'getAppsDropListFunc'. Either include it or remove the dependency array.",["519"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loadServers'. Either include it or remove the dependency array.",["520"],"'faEdit' is defined but never used.","'faEye' is defined but never used.","'BootstrapSwitchButton' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getLinksGroupedByApplicationsFunc'. Either include it or remove the dependency array.",["521"],"no-global-assign","no-unsafe-negation",{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [id, loadIssue]",{"range":"546","text":"547"},"Update the dependencies array to be: [isFiltered, issuesFilter, loadIssues]",{"range":"548","text":"549"},"Update the dependencies array to be: [loadApps, number]",{"range":"550","text":"551"},"Update the dependencies array to be: [getAllTeamsFunc, getAppById, getBusinessAreaTypesFunc, id]",{"range":"552","text":"553"},"Update the dependencies array to be: [app.responsibleTeamId, getUsersByTeamIdFunc]",{"range":"554","text":"555"},"Update the dependencies array to be: [getJobsByAppIdFunc, id]",{"range":"556","text":"557"},"Update the dependencies array to be: [id, checkboxChanged, trackChanged, getManagementFactoriesAppByIdFunc]",{"range":"558","text":"559"},"Update the dependencies array to be: [getAppsDropListFunc, getCountriesFunc]",{"range":"560","text":"561"},"Update the dependencies array to be: [countryId, getServersByCountryIdFunc]",{"range":"562","text":"563"},"Update the dependencies array to be: [getAppsDropListFunc]",{"range":"564","text":"565"},"Update the dependencies array to be: [loadServers]",{"range":"566","text":"567"},"Update the dependencies array to be: [getLinksGroupedByApplicationsFunc]",{"range":"568","text":"569"},[1062,1066],"[id, loadIssue]",[811,823],"[isFiltered, issuesFilter, loadIssues]",[1791,1799],"[loadApps, number]",[3003,3005],"[getAllTeamsFunc, getAppById, getBusinessAreaTypesFunc, id]",[3092,3115],"[app.responsibleTeamId, getUsersByTeamIdFunc]",[1395,1399],"[getJobsByAppIdFunc, id]",[1522,1557],"[id, checkboxChanged, trackChanged, getManagementFactoriesAppByIdFunc]",[1243,1245],"[getAppsDropListFunc, getCountriesFunc]",[1327,1338],"[countryId, getServersByCountryIdFunc]",[1029,1031],"[getAppsDropListFunc]",[1778,1780],"[loadServers]",[956,958],"[getLinksGroupedByApplicationsFunc]"]