[{"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\index.js":"1","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\reportWebVitals.js":"2","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\UserSignupPage.js":"3","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\apiCalls.js":"4","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\input.js":"5","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\i18n.js":"6","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\LoginPage.js":"7","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\LanguageSelector.js":"8","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\buttonWithProgress.js":"9","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ButtonWithProgress.js":"10","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\shared\\ApiProgress.js":"11","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\container\\App.js":"12","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\HomePage.js":"13","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\DashboardPage.js":"14","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\NavBar.js":"15","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\configureStore.js":"16","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authReducer.js":"17","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authActions.js":"18","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\Constants.js":"19","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryList.js":"20","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryListItem.js":"21","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryCountryListItem.js":"22","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryServerListItem.js":"23","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssuesLıst.js":"24","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssueLıstItem.js":"25","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\JobWithIssuesComponent.js":"26","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\issueApiCalls.js":"27","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssuesPage.js":"28","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueList.js":"29","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueListItem.js":"30","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\appApiCalls.js":"31","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssueDetailPage.js":"32","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueDetailsCard.js":"33","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Spinner.js":"34","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\countryApiCalls.js":"35","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\jobInterfaceApiCalls.js":"36","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\serverApiCalls.js":"37","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueFilter.js":"38","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\ManagementPage.js":"39","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ManagementPageComponents\\ManagementPageListItem.js":"40","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\AppDetailPage.js":"41","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppDetailCard.js":"42","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\teamApiCalls.js":"43","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\userApiCalls.js":"44","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\backendApiCalls.js":"45","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\frontendApiCalls.js":"46","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\databaseApiCalls.js":"47","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppLinks.js":"48","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\linkApiCalls.js":"49","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\FactoryManagementComponent.js":"50","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\applicationCountryApiCalls.js":"51","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCard.js":"52","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCardListItem.js":"53","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationHooks\\SetupApplicationHook.js":"54","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\JobInterfaceHooks\\AddJobInterfaceHook.js":"55"},{"size":759,"mtime":1613074318693,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"57"},{"size":4668,"mtime":1613260930403,"results":"59","hashOfConfig":"57"},{"size":879,"mtime":1614430255719,"results":"60","hashOfConfig":"57"},{"size":946,"mtime":1615214818991,"results":"61","hashOfConfig":"57"},{"size":6229,"mtime":1615382960448,"results":"62","hashOfConfig":"57"},{"size":3092,"mtime":1615214634676,"results":"63","hashOfConfig":"57"},{"size":785,"mtime":1613232026360,"results":"64","hashOfConfig":"57"},{"size":758,"mtime":1612641195776,"results":"65","hashOfConfig":"57"},{"size":687,"mtime":1613907056148,"results":"66","hashOfConfig":"57"},{"size":2064,"mtime":1614288872753,"results":"67","hashOfConfig":"57"},{"size":2238,"mtime":1615383614176,"results":"68","hashOfConfig":"57"},{"size":183,"mtime":1612727611675,"results":"69","hashOfConfig":"57"},{"size":436,"mtime":1613567714688,"results":"70","hashOfConfig":"57"},{"size":4845,"mtime":1613662993063,"results":"71","hashOfConfig":"57"},{"size":2653,"mtime":1613484621271,"results":"72","hashOfConfig":"57"},{"size":923,"mtime":1613484640135,"results":"73","hashOfConfig":"57"},{"size":283,"mtime":1613143108957,"results":"74","hashOfConfig":"57"},{"size":94,"mtime":1613132231844,"results":"75","hashOfConfig":"57"},{"size":1950,"mtime":1614981803768,"results":"76","hashOfConfig":"57"},{"size":2287,"mtime":1614981934709,"results":"77","hashOfConfig":"57"},{"size":1317,"mtime":1613663279632,"results":"78","hashOfConfig":"57"},{"size":1238,"mtime":1613663143864,"results":"79","hashOfConfig":"57"},{"size":2054,"mtime":1613907181122,"results":"80","hashOfConfig":"57"},{"size":742,"mtime":1613567682863,"results":"81","hashOfConfig":"57"},{"size":870,"mtime":1613663147098,"results":"82","hashOfConfig":"57"},{"size":1151,"mtime":1615055588371,"results":"83","hashOfConfig":"57"},{"size":250,"mtime":1613662451816,"results":"84","hashOfConfig":"57"},{"size":5415,"mtime":1614288334599,"results":"85","hashOfConfig":"57"},{"size":3384,"mtime":1615054476173,"results":"86","hashOfConfig":"57"},{"size":1239,"mtime":1615222452340,"results":"87","hashOfConfig":"57"},{"size":2019,"mtime":1613922024166,"results":"88","hashOfConfig":"57"},{"size":12223,"mtime":1614593638078,"results":"89","hashOfConfig":"57"},{"size":297,"mtime":1613906994374,"results":"90","hashOfConfig":"57"},{"size":241,"mtime":1615027498871,"results":"91","hashOfConfig":"57"},{"size":228,"mtime":1615384188865,"results":"92","hashOfConfig":"57"},{"size":137,"mtime":1614019143740,"results":"93","hashOfConfig":"57"},{"size":5189,"mtime":1614167154846,"results":"94","hashOfConfig":"57"},{"size":5237,"mtime":1615383578251,"results":"95","hashOfConfig":"57"},{"size":2949,"mtime":1614470316477,"results":"96","hashOfConfig":"57"},{"size":1147,"mtime":1615205143746,"results":"97","hashOfConfig":"57"},{"size":18024,"mtime":1615374338245,"results":"98","hashOfConfig":"57"},{"size":103,"mtime":1614511660522,"results":"99","hashOfConfig":"57"},{"size":135,"mtime":1614529937274,"results":"100","hashOfConfig":"57"},{"size":106,"mtime":1614532158181,"results":"101","hashOfConfig":"57"},{"size":108,"mtime":1614532548951,"results":"102","hashOfConfig":"57"},{"size":108,"mtime":1614534014932,"results":"103","hashOfConfig":"57"},{"size":8521,"mtime":1615046124050,"results":"104","hashOfConfig":"57"},{"size":138,"mtime":1614801917948,"results":"105","hashOfConfig":"57"},{"size":4432,"mtime":1615374471539,"results":"106","hashOfConfig":"57"},{"size":464,"mtime":1615038899108,"results":"107","hashOfConfig":"57"},{"size":4332,"mtime":1615205141049,"results":"108","hashOfConfig":"57"},{"size":3253,"mtime":1615225468792,"results":"109","hashOfConfig":"57"},{"size":6494,"mtime":1615374680163,"results":"110","hashOfConfig":"57"},{"size":3382,"mtime":1615391623969,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"15734lp",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\index.js",[],["243","244"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\reportWebVitals.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\UserSignupPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\apiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\input.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\i18n.js",["245","246"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\LoginPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\LanguageSelector.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\buttonWithProgress.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ButtonWithProgress.js",["247"],"import React from 'react';\r\nimport Spinner from './Spinner';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n    const { onClick, pendingApiCall, disabled, text, loading } = props\r\n    return (\r\n        <div>\r\n            <div className=\"text-center\">\r\n                <button disabled={disabled} className=\"btn btn-primary\" onClick={onClick}>{text}</button>\r\n            </div>\r\n            <div className=\"text-center mt-2\">\r\n                {pendingApiCall && //conditional rendering deniyor buna pendingApiCall dogruysa devamindaki calisir\r\n                    <Spinner></Spinner>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\shared\\ApiProgress.js",["248","249"],"import React, { Component, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiPath, apiMethod = undefined) => { //buda bir hook artik\r\n    const [pendingApiCall, setpendingApiCall] = useState(false);\r\n\r\n    useEffect(() => { // bu hook yuklendigi zaman calisacak.\r\n        let requestInterceptor, responseInterceptor;\r\n\r\n        const updateApiCallFor = (url, inProgress, method) => {\r\n            if (url.startsWith(apiPath)) {\r\n                if (apiMethod !== undefined) {\r\n                    if (method === apiMethod) {\r\n                        setpendingApiCall(inProgress)\r\n                    }\r\n                }\r\n                else {\r\n                    setpendingApiCall(inProgress)\r\n                }\r\n            }\r\n        }\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const { url, method } = request;\r\n                updateApiCallFor(url, true, method);\r\n                return request;\r\n            });\r\n\r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                const { url, method } = response.config;\r\n                updateApiCallFor(url, false, method);\r\n\r\n                return response;\r\n            }, (error) => {\r\n                const { url, method } = error.config;\r\n                updateApiCallFor(url, false, method);\r\n                throw error;\r\n            })\r\n        }\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    }, [apiPath, apiMethod]); //ikinci parametreyi dizi olarak vermeseydim sadece yuklendiginde degil sayfada her degisim oldugunda calisirdi mesela kullanici adini girdigimde her harfe bastigimda calisirdi\r\n\r\n    return pendingApiCall;\r\n}","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\container\\App.js",["250"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\HomePage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\DashboardPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\NavBar.js",["251","252","253","254","255"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'; //a etiketi yerine Link kullanma sebebimiz HashRouter yerine BrowserRouter kullanmak istersek ilerde sorun yasamamk icin yani hashrouter /# gibi bir etiket ekliyor cunku\r\nimport { useTranslation } from 'react-i18next';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt, faSignOutAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport LanguageSelector from '../components/LanguageSelector';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions';\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch(); //redux'a action gondermek icin kullanacagimiz dispatch\r\n\r\n    const reduxState = useSelector((store) => { //redux store'daki bilgileri cekiyoruz\r\n        return {\r\n            isLoggedIn: store.isLoggedIn,\r\n            mail: store.mail,\r\n            name: store.name,\r\n            password: store.password,\r\n            surname: store.surname\r\n        };\r\n    });\r\n    const { isLoggedIn, mail, name, password, surname } = reduxState;\r\n\r\n    let changeableLinks = ( //let block scope ozelligi tasir var ise function scope ozelligi tasir.\r\n        <ul className=\"navbar-nav ml-auto\" >\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    <span className=\"mr-1\">{t('Login')}</span>\r\n                    <FontAwesomeIcon icon={faSignInAlt} />\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">\r\n                    <span className=\"mr-1\">{t('Add User')}</span>\r\n                    <FontAwesomeIcon icon={faUserPlus} />\r\n                </Link>\r\n            </li>\r\n        </ul>);\r\n\r\n    if (isLoggedIn) {\r\n        changeableLinks = (\r\n            <ul className=\"navbar-nav ml-auto\" >\r\n                <li className=\"nav-item mt-2\">\r\n                    <span className=\"mr-1\">{mail}</span>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\" onClick={() => { dispatch(logoutSuccess()); }}>\r\n                        <span className=\"mr-1\">{t('Logout')}</span>\r\n                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                    </Link>\r\n                </li>\r\n            </ul>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow-sm mb-2\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">MANPORT</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\" navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">{t('Home')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/dashboard\">{t('Dashboard')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/management\">{t('Management')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/issues\">{t('Issues')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/links\">{t('Links')}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {t('Language')}\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <LanguageSelector></LanguageSelector>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    {changeableLinks}\r\n\r\n                </div>\r\n\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\configureStore.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authReducer.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\authActions.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\redux\\Constants.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryList.js",["256","257"],"import React, { useState, useEffect } from 'react';\r\nimport { getApplicationsSummary } from '../../api/appApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ApplicationsSummaryListItem from './ApplicationsSummaryListItem';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport Spinner from '../Spinner';\r\n\r\n\r\nconst ApplicationsSummaryList = () => {\r\n    const [summaries, setsummaries] = useState([]);\r\n    const [loadFailure, setloadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('/api/applicationsummary'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            setloadFailure(false);\r\n            const response = await getApplicationsSummary();\r\n            setsummaries(response.data.applicationsSummary);\r\n        } catch (error) {\r\n            setloadFailure(true);\r\n        }\r\n    }, []);\r\n\r\n    let returnView;\r\n    returnView =\r\n        <div>\r\n            {summaries.map((summary, index) => {\r\n                return (\r\n                    <ApplicationsSummaryListItem summary={summary} key={summary.appId} />\r\n                )\r\n            })}\r\n            <div className=\"container text-center mt-2\">\r\n                {pendingApiCall && //conditional rendering deniyor buna pendingApiCall dogruysa devamindaki calisir\r\n                    <Spinner></Spinner>\r\n                }\r\n                {loadFailure == true &&\r\n                    <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            {returnView}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplicationsSummaryList;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryListItem.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryCountryListItem.js",["258","259"],"import React from 'react';\r\nimport { Col, Alert, Row, Container } from 'react-bootstrap';\r\nimport ApplicationsSummaryServerListItem from './ApplicationsSummaryServerListItem';\r\n\r\nconst ApplicationsSummaryCountryListItem = (props) => {\r\n    const { countryWithServersList } = props;\r\n    const { aserverWithJobsList, highestImpactOfCountry } = countryWithServersList;\r\n\r\n    let classOfCountryAlert = 'bg-success text-center';\r\n    if (highestImpactOfCountry === 'LOW') {\r\n        classOfCountryAlert = 'bg-primary text-center';\r\n    } else if (highestImpactOfCountry === 'MEDIUM') {\r\n        classOfCountryAlert = 'bg-warning text-center'\r\n    } else if (highestImpactOfCountry === 'HIGH') {\r\n        classOfCountryAlert = 'bg-danger text-center';\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Alert className={classOfCountryAlert}>\r\n                {countryWithServersList.countryName}\r\n            </Alert>\r\n\r\n            {\r\n                aserverWithJobsList.map((aServerWithJobs, index) => {\r\n                    return (\r\n                        <ApplicationsSummaryServerListItem aServerWithJobs={aServerWithJobs} key={aServerWithJobs.serverId} />\r\n                    )\r\n                })\r\n\r\n            }\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default ApplicationsSummaryCountryListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\ApplicationsSummaryServerListItem.js",["260"],"import React from 'react';\r\nimport { Col, Alert, Row } from 'react-bootstrap';\r\nimport JobWithIssuesComponent from './JobWithIssuesComponent';\r\n\r\nconst ApplicationsSummaryServerListItem = (props) => {\r\n    const { aServerWithJobs } = props;\r\n    const { jobAndIssues: jobsAndIssues, highestImpactOfServer } = aServerWithJobs;\r\n\r\n    let classOfServerAlert = 'bg-success text-center';\r\n    if (highestImpactOfServer === 'LOW') {\r\n        classOfServerAlert = 'bg-primary text-center';\r\n    } else if (highestImpactOfServer === 'MEDIUM') {\r\n        classOfServerAlert = 'bg-warning text-center'\r\n    } else if (highestImpactOfServer === 'HIGH') {\r\n        classOfServerAlert = 'bg-danger text-center';\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Col >\r\n                <Alert className={classOfServerAlert}>\r\n                    {aServerWithJobs.serverName}\r\n                </Alert>\r\n            </Col>\r\n\r\n            {jobsAndIssues.map((jobWithIssues, index) => {\r\n                return (\r\n                    <JobWithIssuesComponent jobWithIssues={jobWithIssues} key={jobWithIssues.jobId} />\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ApplicationsSummaryServerListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssuesLıst.js",["261","262"],"import React, { useState, useEffect } from 'react';\r\nimport { getTop3Issues } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Top3IssueLıstItem from './Top3IssueLıstItem';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Top3IssuesLıst = () => { //bu bir hook oldu artik\r\n    const [issues, setissues] = useState([]);\r\n    const [loadFailure, setloadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('/api/issue/top3'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            setloadFailure(false);\r\n            const response = await getTop3Issues();\r\n            setissues(response.data);\r\n        } catch (error) {\r\n            setloadFailure(true);\r\n        }\r\n    }, []); //ikinci parametresini [] boyle verince componentDidMount gibi calisiyor.\r\n\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card bg-light w-50 container\">\r\n                <h6>\r\n                    {t('Last Issues')}\r\n                </h6>\r\n                {issues.map((issue, index) => { //burada span'in rengi issue'nin sorununun ciddilige gore farklilik gosterecek sekilde ayarlanmali\r\n                    return (\r\n                        <Top3IssueLıstItem issue={issue} key={issue.id} />\r\n                    )\r\n                })}\r\n                <div className=\"text-center mt-2\">\r\n                    {pendingApiCall && //conditional rendering deniyor buna pendingApiCall dogruysa devamindaki calisir\r\n                        <Spinner></Spinner>\r\n                    }\r\n                    {loadFailure == true &&\r\n                        <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top3IssuesLıst;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Top3IssuesComponents\\Top3IssueLıstItem.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationsSummaryComponents\\JobWithIssuesComponent.js",["263"],"import React from 'react';\r\nimport { Col, Row, Alert } from 'react-bootstrap';\r\n\r\nconst JobWithIssuesComponent = (props) => {\r\n    const { jobWithIssues } = props;\r\n    const { highestImpactOfJob } = jobWithIssues;\r\n\r\n    let classOfJob = 'container bg-success';\r\n    if (highestImpactOfJob === 'LOW') {\r\n        classOfJob = 'container bg-primary';\r\n    } else if (highestImpactOfJob === 'MEDIUM') {\r\n        classOfJob = 'container bg-warning'\r\n    } else if (highestImpactOfJob === 'HIGH') {\r\n        classOfJob = 'container bg-danger';\r\n    }\r\n\r\n    return (\r\n        <Col xs={4} className=\"container text-white\" >\r\n            <div className={classOfJob}>\r\n                <Alert className=\"text-center\">\r\n                    {jobWithIssues.jobName}\r\n                </Alert>\r\n            </div>\r\n\r\n        </Col>\r\n    )\r\n\r\n}\r\nexport default JobWithIssuesComponent;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\issueApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssuesPage.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueList.js",["264","265","266","267","268"],"import React, { useState, useEffect } from 'react'\r\nimport { getIssues } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IssueListItem from './IssueListItem';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../Spinner';\r\nimport IssueFilter from './IssueFilter';\r\n\r\nconst IssueList = () => {\r\n\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        first: undefined,\r\n        last: undefined,\r\n        number: undefined\r\n    });\r\n\r\n    const [isFilteredFromFilter, setIsFilteredFromFilter] = useState(false);\r\n    const [issuesFilterFromFilter, setIssuesFilterFromFilter] = useState({\r\n        selectedFromDate: null,\r\n        selectedToDate: null,\r\n        appId: null,\r\n        status: null\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('/api/issue/issues'); //useEffect'ten sonra tanimlanirsa calismaz cunku sonrasin aldigimiz zaman o esnada artik request atilmis oluyo ve biz ondan sonra dinlemeye basliyoruz yani gec kalmis oluyoruz.\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadIssues(isFilteredFromFilter, issuesFilterFromFilter, nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadIssues(isFilteredFromFilter, issuesFilterFromFilter, previousPage);\r\n    }\r\n\r\n    const loadIssues = async (isFiltered = isFilteredFromFilter, filteredValues = issuesFilterFromFilter, page = 0) => {\r\n        try {\r\n            let response;\r\n            if (isFiltered === false) {\r\n                response = await getIssues(page, 5, undefined);\r\n            }\r\n            else {\r\n                response = await getIssues(page, 5, filteredValues);\r\n            }\r\n            setLoadFailure(false);\r\n            const { data } = response;\r\n            setPage(data);\r\n        } catch (error) {\r\n            setLoadFailure(true);\r\n        }\r\n        if (isFiltered) {\r\n            setIsFilteredFromFilter(isFiltered);\r\n        }\r\n        if (filteredValues) {\r\n            setIssuesFilterFromFilter({ ...filteredValues });\r\n        }\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    const { content: issues, first, last } = page;\r\n\r\n    let buttonsOrProgressBarDiv = (\r\n        <div>\r\n            {first === false && <button className=\"btn btn-sm btn-dark\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n            {last === false && <button className=\"btn btn-sm btn-dark float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n        </div>)\r\n\r\n    if (pendingApiCall) {\r\n        buttonsOrProgressBarDiv = (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <IssueFilter loadIssues={loadIssues}></IssueFilter>\r\n\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header text-center\">{t('Issues')}</h2>\r\n                <div className=\"list-group-flush\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">{t('Date')}</th>\r\n                                <th scope=\"col\">{t('App Name')}</th>\r\n                                <th scope=\"col\">{t('Job Name')}</th>\r\n                                <th scope=\"col\">{t('Impact')}</th>\r\n                                <th scope=\"col\">{t('Country')}</th>\r\n                                <th scope=\"col\">{t('Description')}</th>\r\n                                <th scope=\"col\">\r\n                                    <div >{t('Actions')}</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            {t('View')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Edit')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Delete')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Status')}\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {issues.map((issue, index) => {\r\n                                return (\r\n                                    <IssueListItem issue={issue} key={issue.id} />\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {buttonsOrProgressBarDiv}\r\n                {loadFailure == true &&\r\n                    <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IssueList;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueListItem.js",["269"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteIssueById, changeIssueStatusById } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst IssueListItem = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n    const { issue } = props;\r\n    const { name, createdDate, appShortName, jobName, impact, countryName, description, status, id } = issue;\r\n    const [errorMessage, seterrorMessage] = useState(undefined)\r\n    const [infoMessage, setInfoMessage] = useState(undefined);\r\n\r\n    const deleteButtonClicked = async () => {\r\n        setInfoMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        if (window.confirm(`Do you want to delete ${name}?`)) {\r\n            try {\r\n                const response = await deleteIssueById(id);;\r\n                console.log(response.data);\r\n                //setInfoMessage(response.data); burayi yapcan\r\n                setInfoMessage(\"silindi\");\r\n            } catch (error) {\r\n                seterrorMessage(t('An Error Occured While deleting issue'))\r\n            }\r\n        }\r\n    }\r\n\r\n    const statusSwitchButtonChanged = async (status) => {\r\n        changeIssueStatusById({ status }, id);\r\n    }\r\n\r\n    if (infoMessage) {\r\n        return (\r\n            <tr>\r\n                <td colSpan=\"10\" className=\"alert-info text-center\">\r\n                    {infoMessage}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{createdDate}</td>\r\n                <td>{appShortName}</td>\r\n                <td>{jobName}</td>\r\n                <td>{impact}</td>\r\n                <td>{countryName}</td>\r\n                <td>{description}</td>\r\n                <td>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${true}` }}>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${false}` }}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                        </div>\r\n                        <button className=\"btn button-small btn-danger col-3\" onClick={() => { deleteButtonClicked() }}>\r\n                            <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                        </button>\r\n                        <div className=\"col-3\">\r\n                            <BootstrapSwitchButton\r\n                                onChange={(event) => { statusSwitchButtonChanged(event) }}\r\n                                checked={status}\r\n                                onlabel='ON'\r\n                                offlabel='OFF'\r\n                                onstyle=\"success\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n};\r\n\r\nexport default IssueListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\appApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\IssueDetailPage.js",["270"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getIssueById } from '../api/issueApiCalls';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IssueDetailsCard from '../components/IssueComponents/IssueDetailsCard';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\n\r\n\r\nconst IssueDetailPage = props => {\r\n    const [issue, setIssue] = useState({});\r\n    const [notFound, setNotFound] = useState(false);\r\n\r\n    //const { id } = props.match.params; //boyle almaktansa useParams ile almak daha iyi cunku eger App.js'de Route yaparak o hiyerarsiyi vermedigimiz bir yerden almamiz gerekirse bu sekilde aliriz.\r\n    const { id } = useParams();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const pendingApiCall = useApiProgress('/api/issue/' + id);\r\n\r\n    useEffect(() => {\r\n        loadIssue();\r\n    }, [id]) //id her degistiginde tetiklensin dedik\r\n\r\n    useEffect(() => {\r\n        setNotFound(false);\r\n    }, [issue])\r\n\r\n    const loadIssue = async () => {\r\n        try {\r\n            const response = await getIssueById(id);\r\n            setIssue(response.data);\r\n        } catch (error) {\r\n            setNotFound(true);\r\n        }\r\n    }\r\n\r\n    if (pendingApiCall) {\r\n        return (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    if (notFound) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faExclamationTriangle} />\r\n                    {t('Issue Not Found')}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {<IssueDetailsCard issue={issue} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IssueDetailPage;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueDetailsCard.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"import React, { useState, useEffect } from 'react';\r\nimport { getImpactTypes, updateIssue } from '../../api/issueApiCalls';\r\nimport { getCountries } from '../../api/countryApiCalls';\r\nimport { getApps } from '../../api/appApiCalls';\r\nimport { getJobsByAppId } from '../../api/jobInterfaceApiCalls';\r\nimport { getServersByCountryId } from '../../api/serverApiCalls';\r\nimport { useParams } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst IssueDetailsCard = props => {\r\n\r\n    const { t } = useTranslation();\r\n    const routeParams = useParams();\r\n    const pathIssueId = routeParams.id;\r\n\r\n    var { disabled } = routeParams;\r\n    disabled = disabled == 'true';\r\n\r\n    const [issue, setIssue] = useState({});\r\n    const { id, name, description, impact, createdDate, appShortName, jobName, countryName, status, countryId, appId, serverId, serverName, jobInterfaceId } = props.issue;\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [successMessage, setSuccessMessage] = useState();\r\n\r\n    useEffect(() => {\r\n        setIssue({ ...props.issue });\r\n    }, [props.issue])\r\n\r\n    const [impactTypes, setImpactTypes] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [apps, setApps] = useState([]);\r\n    const [jobs, setJobs] = useState([]);\r\n    const [servers, setServers] = useState([]);\r\n    useEffect(() => {\r\n        loadImpactTypes(); //TODO: ayni istekten ikiser kere gidiyor arastir\r\n        loadCountries();\r\n        loadApps();\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        loadJobs(issue.appId);\r\n    }, [issue.appId])\r\n\r\n    useEffect(() => {\r\n        loadServers(issue.countryId)\r\n    }, [issue.countryId])\r\n\r\n    const loadImpactTypes = async () => {\r\n        try {\r\n            const response = await getImpactTypes();\r\n            setImpactTypes(response.data);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const loadCountries = async () => {\r\n        try {\r\n            const response = await getCountries();\r\n            setCountries(response.data);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const loadApps = async () => {\r\n        try {\r\n            const response = await getApps();\r\n            setApps(response.data);\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const loadJobs = async (appId) => {\r\n        if (appId) {\r\n            try {\r\n                const response = await getJobsByAppId(appId);\r\n                setJobs(response.data);\r\n            } catch (error) {\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadServers = async (countryId) => {\r\n        if (countryId) {\r\n            try {\r\n                const response = await getServersByCountryId(countryId);\r\n                setServers(response.data);\r\n            } catch (error) {\r\n            }\r\n        }\r\n    }\r\n\r\n    const inputOnChanged = (event) => {\r\n        const { name, value } = event.target;\r\n        if (name == 'appId') {\r\n            setIssue({\r\n                ...issue,\r\n                [name]: value,\r\n                jobInterfaceId: ''\r\n            });\r\n            document.getElementById(\"jobInterfaceIdSelectList\").selectedIndex = 0;\r\n        }\r\n        else if (name == 'countryId') {\r\n            setIssue({\r\n                ...issue,\r\n                [name]: value,\r\n                serverId: ''\r\n            });\r\n            document.getElementById(\"serverIdSelectList\").selectedIndex = 0;\r\n        }\r\n        else {\r\n            setIssue({\r\n                ...issue,\r\n                [name]: value\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const updateButtonClicked = async () => {\r\n        setErrorMessage(undefined);\r\n        setSuccessMessage(undefined);\r\n        if (issue.jobInterfaceId !== '' && issue.serverId !== '') {\r\n            try {\r\n                const response = await updateIssue(issue);\r\n                setSuccessMessage(t('Updated Successfully'));\r\n            } catch (error) {\r\n                setErrorMessage(error.response.data.message);\r\n            }\r\n        }\r\n        else {\r\n            setErrorMessage(t('You Should Fill in the fields'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header text-center\">\r\n                <h2 className=\"\">{name}</h2>\r\n                <span>{t('Details')}</span>\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">id:</div>\r\n                            <div className=\"col-9\"><input disabled='true' className=\"form-control\" name='id' onChange={(event) => { inputOnChanged(event); }} defaultValue={id} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('name')}:</div>\r\n                            <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='name' onChange={(event) => { inputOnChanged(event); }} defaultValue={name} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Description')}:</div>\r\n                            <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='description' onChange={(event) => { inputOnChanged(event); }} defaultValue={description} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Impact')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='impact' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option>{impact}</option>\r\n                                    {impactTypes.map((impactFromApi, index) => {\r\n                                        if (impactFromApi !== impact) {\r\n                                            return (\r\n                                                <option key={index}>{impactFromApi}</option>\r\n                                            )\r\n                                        }\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('App Name')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='appId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    {apps.map((appFromApi, index) => {\r\n                                        return (\r\n                                            <option key={appFromApi.id} value={appFromApi.id} selected={appFromApi.id == appId}>{appFromApi.shortName}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\"> {t('Status')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='status' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option>{status == 'false' ? 'false' : 'true'}</option>\r\n                                    {status == true &&\r\n                                        <option value={false}>{false.toString()}</option>\r\n                                    }\r\n                                    {status == false &&\r\n                                        <option value={true}>{true.toString()}</option>\r\n                                    }\r\n\r\n                                </select></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Job Name')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select id=\"jobInterfaceIdSelectList\" disabled={disabled} className=\"form-control\" name='jobInterfaceId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option value=''>{t('Select One')}</option>\r\n                                    {jobs.map((jobFromApi, index) => {\r\n                                        return (\r\n                                            <option key={jobFromApi.id} value={jobFromApi.id} selected={jobFromApi.id == issue.jobInterfaceId}>{jobFromApi.name}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Country')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select disabled={disabled} className=\"form-control\" name='countryId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    {countries.map((countryFromApi, index) => {\r\n                                        return (\r\n                                            <option key={index} value={countryFromApi.id} selected={countryFromApi.id == issue.countryId}>{countryFromApi.name}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row m-1\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">{t('Server')}:</div>\r\n                            <div className=\"col-9\">\r\n                                <select id=\"serverIdSelectList\" disabled={disabled} className=\"form-control\" name='serverId' onChange={(event) => { inputOnChanged(event); }}>\r\n                                    <option value=''>{t('Select One')}</option>\r\n                                    {servers.map((serverFromApi, index) => {\r\n                                        return (\r\n                                            <option key={serverFromApi.id} value={serverFromApi.id} selected={serverFromApi.id == issue.serverId}>{serverFromApi.name}</option>\r\n                                        )\r\n\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {errorMessage && <div className=\"alert-danger text-center\">{errorMessage}</div>}\r\n            {successMessage && <div className=\"alert-success text-center\">{successMessage}</div>}\r\n            <button hidden={disabled} className=\"btn btn-primary m-1\" onClick={() => { updateButtonClicked() }}>{t('Update')}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IssueDetailsCard;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\Spinner.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\countryApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\jobInterfaceApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\serverApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\IssueComponents\\IssueFilter.js",["293"],"import React, { useState, useEffect } from 'react'\r\nimport { getAppsDropList } from '../../api/appApiCalls';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst IssueFilter = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n    const { loadIssues } = props;\r\n    const [issuesFilter, setIssuesFilter] = useState({\r\n        selectedFromDate: null,\r\n        selectedToDate: null,\r\n        appId: null,\r\n        status: null\r\n    });\r\n\r\n    const [isFiltered, setIsFiltered] = useState(false);\r\n    useEffect(() => {\r\n        loadIssues(isFiltered, issuesFilter);\r\n    }, [isFiltered]);\r\n\r\n    const [apps, setApps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadApps();\r\n    }, []); //component didMount gibi calisir bu suan ama egerki 2. parametreye hic bir sey vermeseydik hem didmount hem de didupdate gibi calisirdi yani her degisiklikte calisirdi gibi bir anlama geliyor. ama mesela ikinci parametre olarak [param1,param2] gibi bisey deseydik param1 veya param2 degistigi zaman calis gibi bir anlami olurdu\r\n\r\n\r\n    const loadApps = async () => {\r\n        try {\r\n            const response = await getAppsDropList();\r\n            const { data } = response;\r\n            setApps(data);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <span className=\"mr-2\">Application:</span>\r\n                    <select className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" defaultValue=''\r\n                        onChange={\r\n                            (event) => {\r\n                                const copyIssuesFilter = { ...issuesFilter };\r\n                                copyIssuesFilter.appId = event.target.value;\r\n                                setIssuesFilter(copyIssuesFilter);\r\n                            }}>\r\n                        <option value=''>All</option>\r\n                        {apps.map((app, index) => {\r\n                            return (\r\n                                <option value={app.id}>{app.shortName}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <span className=\"mr-2\">Status:</span>\r\n                    <select className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" defaultValue='' onChange={\r\n                        (event) => {\r\n                            const copyIssuesFilter = { ...issuesFilter };\r\n                            copyIssuesFilter.status = event.target.value;\r\n                            setIssuesFilter(copyIssuesFilter);\r\n                        }}>\r\n                        <option value=''>All</option>\r\n                        <option value=\"true\">On</option>\r\n                        <option value=\"false\">Off</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <span>From:</span>\r\n                    <DatePicker className=\"m-1\"\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        selected={issuesFilter.selectedFromDate}\r\n                        onChange={date => {\r\n                            const copyIssuesFilter = { ...issuesFilter };\r\n                            copyIssuesFilter.selectedFromDate = date;\r\n                            setIssuesFilter(copyIssuesFilter);\r\n                        }}\r\n                        maxDate={issuesFilter.selectedToDate}\r\n                    />\r\n                    <FontAwesomeIcon icon={faCalendar} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <span>To:</span>\r\n                    <DatePicker className=\"m-1\"\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        selected={issuesFilter.selectedToDate}\r\n                        onChange={date => {\r\n                            const copyIssuesFilter = { ...issuesFilter };\r\n                            copyIssuesFilter.selectedToDate = date;\r\n                            setIssuesFilter(copyIssuesFilter);\r\n                        }}\r\n                        minDate={issuesFilter.selectedFromDate}\r\n                    />\r\n                    <FontAwesomeIcon icon={faCalendar} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={(event) => {\r\n                setIsFiltered(true);\r\n                loadIssues(isFiltered, issuesFilter);\r\n            }}>{t('Search')}</button>\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\r\n                setIsFiltered(false);\r\n                loadIssues(isFiltered, issuesFilter);\r\n            }}>{t('Remove Filter')}</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default IssueFilter;\r\n\r\n\r\n","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\ManagementPage.js",["294"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ManagementPageComponents\\ManagementPageListItem.js",["295","296","297"],"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { changeLineStopRiskById, changeTrackById } from '../../api/appApiCalls';\r\n\r\n\r\nconst ManagementPageListItem = (props) => {\r\n    const { t } = useTranslation();\r\n    const { app } = props;\r\n    let { id, shortName, businessAreaType, livePlants, lineStopRisk, track } = app;\r\n    const [lineStopRiskState, setlineStopRiskState] = useState(lineStopRisk)\r\n    const [trackState, setTrackState] = useState(track);\r\n\r\n    const changeLineStopRiskByIdFunc = async (id) => {\r\n        try {\r\n            const result = await changeLineStopRiskById(id);\r\n            setlineStopRiskState(!lineStopRiskState);\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const changeTrackByIdFunc = async (id) => {\r\n        try {\r\n            const result = await changeTrackById(id);\r\n            setTrackState(!trackState);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <td>{shortName}</td>\r\n            <td>{businessAreaType}</td>\r\n            <td>{livePlants}</td>\r\n            <td>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" checked={lineStopRiskState} id=\"flexCheckDefault\" value={lineStopRiskState} onChange={(event) => { changeLineStopRiskByIdFunc(id); }} />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 \">\r\n                        <Link to={{ pathname: `/app/${id}/${true}` }}>\r\n                            <FontAwesomeIcon icon={faEye} />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-3 \">\r\n                        <Link to={{ pathname: `/app/${id}/${false}` }}>\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </Link>\r\n                    </div>\r\n                    <button className=\"btn button-small btn-danger col-3\" onClick={() => { }}>\r\n                        <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                    </button>\r\n                    <div className=\"col-3\">\r\n                        <BootstrapSwitchButton\r\n                            onChange={(event) => { changeTrackByIdFunc(id); }}\r\n                            checked={trackState}\r\n                            onlabel='ON'\r\n                            offlabel='OFF'\r\n                            onstyle=\"success\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default ManagementPageListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\pages\\AppDetailPage.js",["298","299","300","301","302","303","304"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport AppDetailsCard from '../components/AppDetailPageComponents/AppDetailCard';\r\nimport AppLinks from '../components/AppDetailPageComponents/AppLinks';\r\nimport FactoryManagementComponent from '../components/AppDetailPageComponents/FactoryManagementComponent';\r\nimport IssueManagementByAppCard from '../components/AppDetailPageComponents/IssueManagementByAppCard';\r\n\r\nconst AppDetailPage = props => {\r\n    const [issue, setIssue] = useState({});\r\n    const [notFound, setNotFound] = useState(false);\r\n    const { id, disabled } = useParams();\r\n    return (\r\n        <div>\r\n            <AppDetailsCard id={id} disabled={disabled}></AppDetailsCard>\r\n            <AppLinks id={id} disabled={disabled}></AppLinks>\r\n            <FactoryManagementComponent id={id} disabled={disabled}></FactoryManagementComponent>\r\n            <IssueManagementByAppCard id={id}></IssueManagementByAppCard>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default AppDetailPage;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppDetailCard.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getApplicationById, changeLineStopRiskById, getBusinessAreaTypes, updateApplication, addApplication } from '../../api/appApiCalls';\r\nimport { getAllTeams } from '../../api/teamApiCalls';\r\nimport { getUsersByTeamId } from '../../api/userApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../../components/Spinner';\r\nimport Input from '../../components/input'\r\n\r\n\r\n\r\n\r\nconst AppDetailsCard = props => {\r\n    const { id } = props;\r\n    let { disabled } = props;\r\n    disabled = disabled == 'true';\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [app, setApp] = useState({\r\n        lineStopRisk: false //yeni app eklerken sorun olmasin diye ekledim burda olmali bu\r\n    });\r\n    const [errorMessage, seterrorMessage] = useState();\r\n    const [error, setError] = useState({});\r\n    const [successMessage, setsuccessMessage] = useState();\r\n    const [businessAreaTypes, setbusinessAreaTypes] = useState([]);\r\n    const [users, setusers] = useState([]);\r\n    const [teams, setteams] = useState([]);\r\n    const [backends, setbackends] = useState([]);\r\n    const [frontends, setfrontends] = useState([]);\r\n    const [databases, setdatabases] = useState([]);\r\n\r\n    const pendingApiCall = useApiProgress('/api/application'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n\r\n    const getAppById = async (id) => {\r\n        if (id) {\r\n            try {\r\n                const result = await getApplicationById(id);\r\n                setApp(result.data);\r\n            } catch (error) {\r\n                console.log(error.response.data);\r\n                seterrorMessage(t('Something Went Wrong'));\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBusinessAreaTypesFunc = async () => {\r\n        try {\r\n            const result = await getBusinessAreaTypes();\r\n            setbusinessAreaTypes(result.data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getAllTeamsFunc = async () => {\r\n        try {\r\n            const result = await getAllTeams();\r\n            setteams(result.data);\r\n        } catch (error) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const getUsersByTeamIdFunc = async (teamId) => {\r\n        if (teamId) {\r\n            try {\r\n                const result = await getUsersByTeamId(teamId);\r\n                setusers(result.data);\r\n            } catch (error) {\r\n                seterrorMessage(t('Something Went Wrong'));\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAppById(id);\r\n        getBusinessAreaTypesFunc();\r\n        getAllTeamsFunc();\r\n    }, [])\r\n    useEffect(() => {\r\n        getUsersByTeamIdFunc(app.responsibleTeamId);\r\n    }, [app.responsibleTeamId])\r\n\r\n    if (app) {\r\n        var { shortName, fullName, lineStopRisk, track, businessAreaType, releaseDate, responsibleUserName, responsibleUserId, responsibleTeamName, responsibleTeamId, backendId, backendName, frontendId, frontendName, databaseId, databaseName, lineOfBackendCode, lineOfFrontendCode } = app;\r\n    }\r\n\r\n    const changeLineStopRisk = () => {\r\n        setApp({\r\n            ...app,\r\n            lineStopRisk: !lineStopRisk\r\n        })\r\n    }\r\n\r\n    const inputOnChanged = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        seterrorMessage(undefined);\r\n        setsuccessMessage(undefined);\r\n        setError({\r\n            ...error,\r\n            [name]: undefined\r\n        })\r\n\r\n        if (name == 'responsibleTeamId') {\r\n            setApp({\r\n                ...app,\r\n                [name]: value,\r\n                responsibleUserId: ''\r\n            })\r\n\r\n        }\r\n        else {\r\n            setApp({\r\n                ...app,\r\n                [name]: value\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const updateButtonClicked = async () => {\r\n        setError({});\r\n        seterrorMessage(undefined);\r\n        setsuccessMessage(undefined);\r\n        try {\r\n            const response = await updateApplication(app);\r\n            setsuccessMessage(t('Updated Successfully'));\r\n        } catch (errorFromBackend) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n            setError(errorFromBackend.response.data.validationErrors);\r\n        }\r\n    }\r\n\r\n    const addButtonClicked = async () => {\r\n        setError({});\r\n        seterrorMessage(undefined);\r\n        setsuccessMessage(undefined);\r\n        try {\r\n            const response = await addApplication(app);\r\n            setsuccessMessage(t('App Added Successfully'));\r\n        } catch (errorFromBackend) {\r\n            seterrorMessage(t('Something Went Wrong'));\r\n            setError(errorFromBackend.response.data.validationErrors);\r\n        }\r\n    }\r\n\r\n    const { shortName: shortNameError, fullName: fullNameError, releaseDate: releaseDateError, businessAreaType: businessAreaTypeError, responsibleUserId: responsibleUserIdError, responsibleTeamId: responsibleTeamIdError } = error;\r\n\r\n    let updateOrAddButton;\r\n    if (app.id) {\r\n        updateOrAddButton = <button disabled={pendingApiCall} hidden={disabled == true} className=\"btn btn-primary m-1\" onClick={() => { updateButtonClicked(); }}>{t('Update')}</button>\r\n    }\r\n    else {\r\n        updateOrAddButton = <button disabled={pendingApiCall} hidden={disabled == true} className=\"btn btn-warning m-1\" onClick={() => { addButtonClicked(); }}>{t('Add')}</button>\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header text-center\">\r\n                    <h2 className=\"\">{shortName} - {fullName}</h2>\r\n                    <span>{t('Details')}</span>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row m-1\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Short Name:{disabled}</div>\r\n                                <div className=\"col-9\">\r\n                                    <input disabled={disabled} className={shortNameError ? \"form-control is-invalid\" : 'form-control'} name='shortName' onChange={(event) => { inputOnChanged(event); }} defaultValue={shortName} />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {shortNameError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Full Name:</div>\r\n                                <div className=\"col-9\">\r\n                                    <input disabled={disabled} className={fullNameError ? \"form-control is-invalid\" : 'form-control'} name='fullName' onChange={(event) => { inputOnChanged(event); }} defaultValue={fullName} />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {fullNameError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Release Date:</div>\r\n                                <div className=\"col-9\">\r\n                                    <DatePicker className={releaseDateError ? \"form-control is-invalid m-1\" : 'form-control m-1'}\r\n                                        dateFormat=\"yyyy-MM-dd\"\r\n                                        selected={Date.parse(releaseDate)}\r\n                                        onChange={date => {\r\n                                            const copyApp = { ...app };\r\n                                            copyApp.releaseDate = date;\r\n                                            setApp(copyApp);\r\n                                        }}\r\n                                        disabled={disabled}\r\n                                    />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {releaseDateError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Business Area:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className={businessAreaTypeError ? \"form-control is-invalid\" : 'form-control'} name='businessAreaType' value={app.businessAreaType} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        <option value=''>{t('Select One')}</option>\r\n                                        {businessAreaTypes.map((businesAreaTypeFromApi, index) => {\r\n                                            return (\r\n                                                <option key={index} value={businesAreaTypeFromApi} >{businesAreaTypeFromApi}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {businessAreaTypeError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Responsible:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} id='responsibleSelectList' className={responsibleUserIdError ? \"form-control is-invalid\" : 'form-control'} name='responsibleUserId' value={app.responsibleUserId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        <option value=''>{t('Select One')}</option>\r\n                                        {users.map((userFromApi, index) => {\r\n                                            return (\r\n                                                <option key={userFromApi.id} value={userFromApi.id} >{userFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {responsibleUserIdError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Responsible Team:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className={responsibleTeamIdError ? \"form-control is-invalid\" : 'form-control'} name='responsibleTeamId' value={app.responsibleTeamId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        <option value=''>{t('Select One')}</option>\r\n                                        {teams.map((teamFromApi, index) => {\r\n                                            return (\r\n                                                <option key={teamFromApi.id} value={teamFromApi.id} >{teamFromApi.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {responsibleTeamIdError}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Backend:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className=\"form-control\" name='backendId' value={app.backendId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        {backends.map((backendFromApi, index) => {\r\n                                            return (\r\n                                                <option key={backendFromApi.id} value={backendFromApi.id}>{backendFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Line Count Of Backend Code:</div>\r\n                                <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='lineOfBackendCode' onChange={(event) => { inputOnChanged(event); }} defaultValue={lineOfBackendCode} /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Frontend:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className=\"form-control\" name='frontendId' value={app.frontendId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        {frontends.map((frontendFromApi, index) => {\r\n                                            return (\r\n                                                <option key={frontendFromApi.id} value={frontendFromApi.id}>{frontendFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Line Count Of Frontend Code:</div>\r\n                                <div className=\"col-9\"><input disabled={disabled} className=\"form-control\" name='lineOfFrontendCode' onChange={(event) => { inputOnChanged(event); }} defaultValue={lineOfFrontendCode} /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row m-1\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">Database:</div>\r\n                                <div className=\"col-9\">\r\n                                    <select disabled={disabled} className=\"form-control\" name='databaseId' value={app.databaseId} onChange={(event) => { inputOnChanged(event); }}>\r\n                                        {databases.map((databaseFromApi, index) => {\r\n                                            return (\r\n                                                <option key={databaseFromApi.id} value={databaseFromApi.id} >{databaseFromApi.name}</option>\r\n                                            )\r\n\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"form-check\">\r\n                                        <input disabled={disabled} name='lineStopRisk' className=\"form-check-input\" type=\"checkbox\" checked={lineStopRisk} id=\"flexCheckDefault\" value={lineStopRisk} onChange={(event) => { changeLineStopRisk(); }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-9\">Line Stop Risk(activate critical issue alarm)</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {successMessage && <div className=\"alert-success text-center\">{successMessage}</div>}\r\n                {updateOrAddButton}\r\n                {pendingApiCall && <Spinner></Spinner>}\r\n                {errorMessage && <div className=\"text-center alert-danger\">{errorMessage}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppDetailsCard;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\teamApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\userApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\backendApiCalls.js",[],["331","332"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\frontendApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\databaseApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\AppLinks.js",["333","334","335","336"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getLinksByAppIdForManagementPage } from '../../api/linkApiCalls';\r\nimport { Accordion, Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst AppLinks = props => {\r\n    const { id } = props;\r\n    const [data, setData] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const { t } = useTranslation();\r\n\r\n    const getJobsByAppIdFunc = async (appId) => {\r\n        try {\r\n            const result = await getLinksByAppIdForManagementPage(appId);\r\n            setData(result.data);\r\n        } catch (error) {\r\n            setErrorMessage(t('Something Went Wrong'));\r\n        }\r\n    }\r\n\r\n    const pendingApiCall = useApiProgress('/api/link/', 'get'); //bu useEffect'den once yazilmali yoksa calismaz cunku useEffect'in altinda bir yere yazsaydik istek atildiktan sonra bu calisirdi ve gec kalmis olurduk\r\n\r\n    useEffect(() => {\r\n        getJobsByAppIdFunc(id);\r\n    }, [id])\r\n\r\n\r\n    if (pendingApiCall) {\r\n        return (<Spinner></Spinner>)\r\n    }\r\n    if (errorMessage) {\r\n        return (<div className=\"text-center alert-danger\">{errorMessage}</div>)\r\n    }\r\n    return (\r\n        <Accordion defaultActiveKey=\"0\">\r\n            <Card className=\"m-5\">\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                    <h2>Links</h2>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                        {data.map((specificType) => {\r\n                            if (specificType.acountryNameWithEnvironmentTypes.length <= 0) {\r\n                                return (\r\n                                    <div key={specificType.specificTypeName}>\r\n                                        <h5>{specificType.specificTypeName} Links </h5>\r\n                                        <div className=\"text-danger\">{t('There is no link for this app')}</div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            return (\r\n                                <Accordion key={specificType.specificTypeName} defaultActiveKey=\"0\">\r\n                                    <div>\r\n                                        <Card className=\"m-5\">\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                                {specificType.specificTypeName} Links\r\n                                </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>\r\n                                                    {specificType.acountryNameWithEnvironmentTypes.map((country) => {\r\n\r\n                                                        return (\r\n                                                            <Accordion key={country.countryName} defaultActiveKey=\"0\">\r\n                                                                <Card className=\"m-5\">\r\n                                                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                                                        {country.countryName}\r\n                                                                    </Accordion.Toggle>\r\n                                                                    <Accordion.Collapse eventKey=\"0\">\r\n                                                                        <Card.Body>\r\n                                                                            {\r\n                                                                                country.anEnvironmentTypeWithLinks.map((environmentType) => {\r\n                                                                                    return (\r\n                                                                                        <Accordion key={environmentType.environmentTypeName} defaultActiveKey=\"0\">\r\n                                                                                            <Card className=\"m-5\">\r\n                                                                                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                                                                                    {environmentType.environmentTypeName}\r\n                                                                                                </Accordion.Toggle>\r\n                                                                                                <Accordion.Collapse eventKey=\"0\">\r\n                                                                                                    <Card.Body>\r\n                                                                                                        {environmentType.linkDTOList.map((link) => {\r\n                                                                                                            return (\r\n                                                                                                                <Row key={link.name}>\r\n                                                                                                                    <h5 className=\"text-center mx-1\">\r\n                                                                                                                        {link.name}:\r\n                                                                                                                    </h5>\r\n                                                                                                                    <a href={link.url}>{link.url}</a>\r\n                                                                                                                </Row>\r\n                                                                                                            )\r\n                                                                                                        })}\r\n                                                                                                    </Card.Body>\r\n                                                                                                </Accordion.Collapse>\r\n                                                                                            </Card>\r\n                                                                                        </Accordion>\r\n                                                                                    )\r\n                                                                                })\r\n                                                                            }\r\n                                                                        </Card.Body>\r\n                                                                    </Accordion.Collapse>\r\n                                                                </Card>\r\n                                                            </Accordion>\r\n                                                        )\r\n\r\n                                                    })}\r\n                                                </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                    </div>\r\n                                </Accordion>\r\n                            )\r\n                        })}\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n\r\n        </Accordion>\r\n    );\r\n}\r\n\r\nexport default AppLinks;\r\n\r\n/*\r\n<Accordion defaultActiveKey=\"0\">\r\n                            <Card className=\"m-5\">\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                    {specificType.specificTypeName} Links\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                    </Accordion>\r\n*/","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\linkApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\FactoryManagementComponent.js",["337","338","339","340","341","342"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\api\\applicationCountryApiCalls.js",[],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCard.js",["343","344"],"import React, { useState, useEffect } from 'react';\r\nimport { useApiProgress } from '../../shared/ApiProgress';\r\nimport Spinner from '../../components/Spinner';\r\nimport { getIssuesByAppId } from '../../api/issueApiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IssueManagementByAppCardListItem from './IssueManagementByAppCardListItem';\r\n\r\n\r\nconst IssueManagementByAppCard = props => {\r\n    const { id, disabled } = props;\r\n\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        first: undefined,\r\n        last: undefined,\r\n        number: undefined\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n    const pendingApiCall = useApiProgress(`/api/issue/getByAppId/${id}`); //useEffect'ten sonra tanimlanirsa calismaz cunku sonrasin aldigimiz zaman o esnada artik request atilmis oluyo ve biz ondan sonra dinlemeye basliyoruz yani gec kalmis oluyoruz.\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        loadIssues(id);\r\n    }, [id])\r\n\r\n    const loadIssues = async (appId, page = 0) => {\r\n        try {\r\n            const response = await getIssuesByAppId(appId, page, 3);\r\n            setLoadFailure(false);\r\n            const { data } = response;\r\n            setPage(data);\r\n        } catch (error) {\r\n            setLoadFailure(true);\r\n        }\r\n\r\n    };\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadIssues(id, nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadIssues(id, previousPage);\r\n    }\r\n\r\n\r\n    const { content: issues, first, last } = page;\r\n\r\n    let buttonsOrProgressBarDiv = (\r\n        <div>\r\n            {first === false && <button className=\"btn btn-sm btn-dark\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n            {last === false && <button className=\"btn btn-sm btn-dark float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n        </div>)\r\n\r\n    if (pendingApiCall) {\r\n        buttonsOrProgressBarDiv = (\r\n            <Spinner></Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header text-center\">{t('Issues Management')}</h2>\r\n                <div className=\"list-group-flush\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">{t('Job Name')}</th>\r\n                                <th scope=\"col\">{t('Impact')}</th>\r\n                                <th scope=\"col\">{t('Description')}</th>\r\n                                <th scope=\"col\">\r\n                                    <div >{t('Actions')}</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            {t('View')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Edit')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Delete')}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            {t('Track')}\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {issues.map((issue, index) => {\r\n                                return (\r\n                                    <IssueManagementByAppCardListItem key={issue.id} issue={issue} />\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {buttonsOrProgressBarDiv}\r\n                {loadFailure == true &&\r\n                    <div className=\"text-center text-danger\">{t('Something Went Wrong')}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default IssueManagementByAppCard;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\AppDetailPageComponents\\IssueManagementByAppCardListItem.js",["345","346","347","348","349","350"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { deleteIssueById, changeIssueTrackById } from '../../api/issueApiCalls';\r\n\r\n\r\nconst IssueManagementByAppCardListItem = (props) => {\r\n    const { t } = useTranslation();\r\n    const { issue } = props;\r\n    const { name, createdDate, appShortName, jobName, impact, countryName, description, status, id, track } = issue;\r\n    const [errorMessage, seterrorMessage] = useState(undefined)\r\n    const [infoMessage, setInfoMessage] = useState(undefined);\r\n\r\n    const deleteButtonClicked = async () => {\r\n        setInfoMessage(undefined);\r\n        seterrorMessage(undefined);\r\n        if (window.confirm(`Do you want to delete ${name}?`)) {\r\n            try {\r\n                const response = await deleteIssueById(id);;\r\n                //setInfoMessage(response.data); burayi yapcan\r\n                setInfoMessage(\"silindi\");\r\n            } catch (error) {\r\n                seterrorMessage(t('An Error Occured While deleting issue'))\r\n            }\r\n        }\r\n    }\r\n\r\n    const trackSwitchButtonChanged = async (track) => {\r\n        changeIssueTrackById({ track }, id);\r\n    }\r\n\r\n    if (infoMessage) {\r\n        return (\r\n            <tr>\r\n                <td colSpan=\"10\" className=\"alert-info text-center\">\r\n                    {infoMessage}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{jobName}</td>\r\n                <td>{impact}</td>\r\n                <td>{description}</td>\r\n                <td>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${true}` }}>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-3 \">\r\n                            <Link to={{ pathname: `/issue/${id}/${false}` }}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                        </div>\r\n                        <button className=\"btn button-small btn-danger col-3\" onClick={() => { deleteButtonClicked(); }}>\r\n                            <FontAwesomeIcon className=\"hover-overlay\" icon={faTrashAlt} />\r\n                        </button>\r\n                        <div className=\"col-3\">\r\n                            <BootstrapSwitchButton\r\n                                onChange={(event) => { trackSwitchButtonChanged(event) }}\r\n                                checked={track}\r\n                                onlabel='ON'\r\n                                offlabel='OFF'\r\n                                onstyle=\"success\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n};\r\nexport default IssueManagementByAppCardListItem;","C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\ApplicationHooks\\SetupApplicationHook.js",["351","352","353"],"C:\\Users\\kutay\\OneDrive\\Belgeler\\ReactProjelerim\\frontendmanport\\src\\components\\JobInterfaceHooks\\AddJobInterfaceHook.js",["354","355","356","357"],{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":26,"column":17,"nodeType":"364","messageId":"365","endLine":26,"endColumn":25},{"ruleId":"362","severity":1,"message":"363","line":89,"column":17,"nodeType":"364","messageId":"365","endLine":89,"endColumn":25},{"ruleId":"366","severity":1,"message":"367","line":5,"column":54,"nodeType":"368","messageId":"369","endLine":5,"endColumn":61},{"ruleId":"366","severity":1,"message":"370","line":1,"column":8,"nodeType":"368","messageId":"369","endLine":1,"endColumn":13},{"ruleId":"366","severity":1,"message":"371","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"371","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"371","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"372","line":28,"column":31,"nodeType":"368","messageId":"369","endLine":28,"endColumn":35},{"ruleId":"366","severity":1,"message":"373","line":28,"column":37,"nodeType":"368","messageId":"369","endLine":28,"endColumn":45},{"ruleId":"366","severity":1,"message":"374","line":28,"column":47,"nodeType":"368","messageId":"369","endLine":28,"endColumn":54},{"ruleId":"375","severity":1,"message":"376","line":88,"column":29,"nodeType":"377","endLine":88,"endColumn":178},{"ruleId":"378","severity":1,"message":"379","line":19,"column":15,"nodeType":"380","endLine":27,"endColumn":6},{"ruleId":"381","severity":1,"message":"382","line":41,"column":30,"nodeType":"383","messageId":"365","endLine":41,"endColumn":32},{"ruleId":"366","severity":1,"message":"384","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":13},{"ruleId":"366","severity":1,"message":"385","line":2,"column":22,"nodeType":"368","messageId":"369","endLine":2,"endColumn":25},{"ruleId":"366","severity":1,"message":"385","line":2,"column":22,"nodeType":"368","messageId":"369","endLine":2,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":14,"column":15,"nodeType":"380","endLine":22,"endColumn":6},{"ruleId":"381","severity":1,"message":"382","line":40,"column":34,"nodeType":"383","messageId":"365","endLine":40,"endColumn":36},{"ruleId":"366","severity":1,"message":"385","line":2,"column":15,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"386","line":1,"column":27,"nodeType":"368","messageId":"369","endLine":1,"endColumn":36},{"ruleId":"366","severity":1,"message":"387","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"388","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":25},{"ruleId":"366","severity":1,"message":"389","line":9,"column":10,"nodeType":"368","messageId":"369","endLine":9,"endColumn":20},{"ruleId":"381","severity":1,"message":"382","line":128,"column":30,"nodeType":"383","messageId":"365","endLine":128,"endColumn":32},{"ruleId":"366","severity":1,"message":"390","line":15,"column":12,"nodeType":"368","messageId":"369","endLine":15,"endColumn":24},{"ruleId":"378","severity":1,"message":"391","line":25,"column":8,"nodeType":"392","endLine":25,"endColumn":12,"suggestions":"393"},{"ruleId":"366","severity":1,"message":"387","line":8,"column":8,"nodeType":"368","messageId":"369","endLine":8,"endColumn":18},{"ruleId":"366","severity":1,"message":"394","line":17,"column":11,"nodeType":"368","messageId":"369","endLine":17,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":20,"column":25,"nodeType":"383","messageId":"365","endLine":20,"endColumn":27},{"ruleId":"366","severity":1,"message":"395","line":23,"column":44,"nodeType":"368","messageId":"369","endLine":23,"endColumn":55},{"ruleId":"366","severity":1,"message":"396","line":23,"column":57,"nodeType":"368","messageId":"369","endLine":23,"endColumn":69},{"ruleId":"366","severity":1,"message":"397","line":23,"column":71,"nodeType":"368","messageId":"369","endLine":23,"endColumn":78},{"ruleId":"366","severity":1,"message":"398","line":23,"column":80,"nodeType":"368","messageId":"369","endLine":23,"endColumn":91},{"ruleId":"366","severity":1,"message":"399","line":23,"column":101,"nodeType":"368","messageId":"369","endLine":23,"endColumn":110},{"ruleId":"366","severity":1,"message":"400","line":23,"column":119,"nodeType":"368","messageId":"369","endLine":23,"endColumn":127},{"ruleId":"366","severity":1,"message":"401","line":23,"column":129,"nodeType":"368","messageId":"369","endLine":23,"endColumn":139},{"ruleId":"366","severity":1,"message":"402","line":23,"column":141,"nodeType":"368","messageId":"369","endLine":23,"endColumn":155},{"ruleId":"381","severity":1,"message":"382","line":97,"column":18,"nodeType":"383","messageId":"365","endLine":97,"endColumn":20},{"ruleId":"381","severity":1,"message":"382","line":105,"column":23,"nodeType":"383","messageId":"365","endLine":105,"endColumn":25},{"ruleId":"366","severity":1,"message":"403","line":128,"column":23,"nodeType":"368","messageId":"369","endLine":128,"endColumn":31},{"ruleId":"404","severity":1,"message":"405","line":180,"column":77,"nodeType":"380","messageId":"406","endLine":180,"endColumn":79},{"ruleId":"381","severity":1,"message":"382","line":204,"column":119,"nodeType":"383","messageId":"365","endLine":204,"endColumn":121},{"ruleId":"381","severity":1,"message":"382","line":217,"column":53,"nodeType":"383","messageId":"365","endLine":217,"endColumn":55},{"ruleId":"381","severity":1,"message":"382","line":218,"column":45,"nodeType":"383","messageId":"365","endLine":218,"endColumn":47},{"ruleId":"381","severity":1,"message":"382","line":221,"column":45,"nodeType":"383","messageId":"365","endLine":221,"endColumn":47},{"ruleId":"381","severity":1,"message":"382","line":241,"column":119,"nodeType":"383","messageId":"365","endLine":241,"endColumn":121},{"ruleId":"381","severity":1,"message":"382","line":257,"column":119,"nodeType":"383","messageId":"365","endLine":257,"endColumn":121},{"ruleId":"381","severity":1,"message":"382","line":277,"column":128,"nodeType":"383","messageId":"365","endLine":277,"endColumn":130},{"ruleId":"378","severity":1,"message":"407","line":24,"column":8,"nodeType":"392","endLine":24,"endColumn":20,"suggestions":"408"},{"ruleId":"378","severity":1,"message":"409","line":45,"column":8,"nodeType":"392","endLine":45,"endColumn":16,"suggestions":"410"},{"ruleId":"366","severity":1,"message":"411","line":11,"column":13,"nodeType":"368","messageId":"369","endLine":11,"endColumn":14},{"ruleId":"366","severity":1,"message":"412","line":19,"column":19,"nodeType":"368","messageId":"369","endLine":19,"endColumn":25},{"ruleId":"366","severity":1,"message":"412","line":29,"column":19,"nodeType":"368","messageId":"369","endLine":29,"endColumn":25},{"ruleId":"366","severity":1,"message":"386","line":1,"column":27,"nodeType":"368","messageId":"369","endLine":1,"endColumn":36},{"ruleId":"366","severity":1,"message":"413","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":24},{"ruleId":"366","severity":1,"message":"414","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":15},{"ruleId":"366","severity":1,"message":"415","line":11,"column":12,"nodeType":"368","messageId":"369","endLine":11,"endColumn":17},{"ruleId":"366","severity":1,"message":"416","line":11,"column":19,"nodeType":"368","messageId":"369","endLine":11,"endColumn":27},{"ruleId":"366","severity":1,"message":"417","line":12,"column":12,"nodeType":"368","messageId":"369","endLine":12,"endColumn":20},{"ruleId":"366","severity":1,"message":"418","line":12,"column":22,"nodeType":"368","messageId":"369","endLine":12,"endColumn":33},{"ruleId":"366","severity":1,"message":"419","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":19},{"ruleId":"366","severity":1,"message":"420","line":3,"column":30,"nodeType":"368","messageId":"369","endLine":3,"endColumn":52},{"ruleId":"366","severity":1,"message":"421","line":11,"column":8,"nodeType":"368","messageId":"369","endLine":11,"endColumn":13},{"ruleId":"381","severity":1,"message":"382","line":19,"column":25,"nodeType":"383","messageId":"365","endLine":19,"endColumn":27},{"ruleId":"366","severity":1,"message":"422","line":32,"column":22,"nodeType":"368","messageId":"369","endLine":32,"endColumn":33},{"ruleId":"366","severity":1,"message":"423","line":33,"column":23,"nodeType":"368","messageId":"369","endLine":33,"endColumn":35},{"ruleId":"366","severity":1,"message":"424","line":34,"column":23,"nodeType":"368","messageId":"369","endLine":34,"endColumn":35},{"ruleId":"378","severity":1,"message":"425","line":84,"column":8,"nodeType":"392","endLine":84,"endColumn":10,"suggestions":"426"},{"ruleId":"378","severity":1,"message":"427","line":87,"column":8,"nodeType":"392","endLine":87,"endColumn":31,"suggestions":"428"},{"ruleId":"366","severity":1,"message":"429","line":90,"column":50,"nodeType":"368","messageId":"369","endLine":90,"endColumn":55},{"ruleId":"366","severity":1,"message":"430","line":90,"column":57,"nodeType":"368","messageId":"369","endLine":90,"endColumn":73},{"ruleId":"366","severity":1,"message":"431","line":90,"column":88,"nodeType":"368","messageId":"369","endLine":90,"endColumn":107},{"ruleId":"366","severity":1,"message":"432","line":90,"column":109,"nodeType":"368","messageId":"369","endLine":90,"endColumn":126},{"ruleId":"366","severity":1,"message":"433","line":90,"column":128,"nodeType":"368","messageId":"369","endLine":90,"endColumn":147},{"ruleId":"366","severity":1,"message":"434","line":90,"column":149,"nodeType":"368","messageId":"369","endLine":90,"endColumn":166},{"ruleId":"366","severity":1,"message":"435","line":90,"column":168,"nodeType":"368","messageId":"369","endLine":90,"endColumn":177},{"ruleId":"366","severity":1,"message":"436","line":90,"column":179,"nodeType":"368","messageId":"369","endLine":90,"endColumn":190},{"ruleId":"366","severity":1,"message":"437","line":90,"column":192,"nodeType":"368","messageId":"369","endLine":90,"endColumn":202},{"ruleId":"366","severity":1,"message":"438","line":90,"column":204,"nodeType":"368","messageId":"369","endLine":90,"endColumn":216},{"ruleId":"366","severity":1,"message":"439","line":90,"column":218,"nodeType":"368","messageId":"369","endLine":90,"endColumn":228},{"ruleId":"366","severity":1,"message":"440","line":90,"column":230,"nodeType":"368","messageId":"369","endLine":90,"endColumn":242},{"ruleId":"381","severity":1,"message":"382","line":110,"column":18,"nodeType":"383","messageId":"365","endLine":110,"endColumn":20},{"ruleId":"366","severity":1,"message":"403","line":132,"column":19,"nodeType":"368","messageId":"369","endLine":132,"endColumn":27},{"ruleId":"366","severity":1,"message":"403","line":145,"column":19,"nodeType":"368","messageId":"369","endLine":145,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":157,"column":80,"nodeType":"383","messageId":"365","endLine":157,"endColumn":82},{"ruleId":"381","severity":1,"message":"382","line":160,"column":80,"nodeType":"383","messageId":"365","endLine":160,"endColumn":82},{"ruleId":"358","replacedBy":"441"},{"ruleId":"360","replacedBy":"442"},{"ruleId":"366","severity":1,"message":"419","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":19},{"ruleId":"366","severity":1,"message":"443","line":4,"column":27,"nodeType":"368","messageId":"369","endLine":4,"endColumn":36},{"ruleId":"366","severity":1,"message":"384","line":4,"column":43,"nodeType":"368","messageId":"369","endLine":4,"endColumn":46},{"ruleId":"378","severity":1,"message":"444","line":28,"column":8,"nodeType":"392","endLine":28,"endColumn":12,"suggestions":"445"},{"ruleId":"366","severity":1,"message":"446","line":13,"column":12,"nodeType":"368","messageId":"369","endLine":13,"endColumn":26},{"ruleId":"366","severity":1,"message":"447","line":13,"column":28,"nodeType":"368","messageId":"369","endLine":13,"endColumn":45},{"ruleId":"378","severity":1,"message":"448","line":32,"column":8,"nodeType":"392","endLine":32,"endColumn":43,"suggestions":"449"},{"ruleId":"366","severity":1,"message":"412","line":37,"column":19,"nodeType":"368","messageId":"369","endLine":37,"endColumn":25},{"ruleId":"366","severity":1,"message":"412","line":47,"column":19,"nodeType":"368","messageId":"369","endLine":47,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":77,"column":71,"nodeType":"383","messageId":"365","endLine":77,"endColumn":73},{"ruleId":"366","severity":1,"message":"450","line":10,"column":17,"nodeType":"368","messageId":"369","endLine":10,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":104,"column":30,"nodeType":"383","messageId":"365","endLine":104,"endColumn":32},{"ruleId":"366","severity":1,"message":"395","line":13,"column":19,"nodeType":"368","messageId":"369","endLine":13,"endColumn":30},{"ruleId":"366","severity":1,"message":"396","line":13,"column":32,"nodeType":"368","messageId":"369","endLine":13,"endColumn":44},{"ruleId":"366","severity":1,"message":"398","line":13,"column":63,"nodeType":"368","messageId":"369","endLine":13,"endColumn":74},{"ruleId":"366","severity":1,"message":"451","line":13,"column":89,"nodeType":"368","messageId":"369","endLine":13,"endColumn":95},{"ruleId":"366","severity":1,"message":"390","line":14,"column":12,"nodeType":"368","messageId":"369","endLine":14,"endColumn":24},{"ruleId":"366","severity":1,"message":"403","line":22,"column":23,"nodeType":"368","messageId":"369","endLine":22,"endColumn":31},{"ruleId":"378","severity":1,"message":"452","line":29,"column":8,"nodeType":"392","endLine":29,"endColumn":10,"suggestions":"453"},{"ruleId":"378","severity":1,"message":"454","line":33,"column":8,"nodeType":"392","endLine":33,"endColumn":19,"suggestions":"455"},{"ruleId":"366","severity":1,"message":"403","line":80,"column":19,"nodeType":"368","messageId":"369","endLine":80,"endColumn":27},{"ruleId":"366","severity":1,"message":"390","line":11,"column":12,"nodeType":"368","messageId":"369","endLine":11,"endColumn":24},{"ruleId":"366","severity":1,"message":"446","line":12,"column":12,"nodeType":"368","messageId":"369","endLine":12,"endColumn":26},{"ruleId":"378","severity":1,"message":"456","line":23,"column":8,"nodeType":"392","endLine":23,"endColumn":10,"suggestions":"457"},{"ruleId":"366","severity":1,"message":"412","line":27,"column":19,"nodeType":"368","messageId":"369","endLine":27,"endColumn":25},"no-native-reassign",["458"],"no-negated-in-lhs",["459"],"no-dupe-keys","Duplicate key 'Issues'.","ObjectExpression","unexpected","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'Component' is defined but never used.","'name' is assigned a value but never used.","'password' is assigned a value but never used.","'surname' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Col' is defined but never used.","'Row' is defined but never used.","'useEffect' is defined but never used.","'DatePicker' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCalendar' is defined but never used.","'errorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadIssue'. Either include it or remove the dependency array.","ArrayExpression",["460"],"'pathIssueId' is assigned a value but never used.","'createdDate' is assigned a value but never used.","'appShortName' is assigned a value but never used.","'jobName' is assigned a value but never used.","'countryName' is assigned a value but never used.","'countryId' is assigned a value but never used.","'serverId' is assigned a value but never used.","'serverName' is assigned a value but never used.","'jobInterfaceId' is assigned a value but never used.","'response' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'issuesFilter' and 'loadIssues'. Either include them or remove the dependency array.",["461"],"React Hook useEffect has a missing dependency: 'loadApps'. Either include it or remove the dependency array.",["462"],"'t' is assigned a value but never used.","'result' is assigned a value but never used.","'useApiProgress' is defined but never used.","'Spinner' is defined but never used.","'issue' is assigned a value but never used.","'setIssue' is assigned a value but never used.","'notFound' is assigned a value but never used.","'setNotFound' is assigned a value but never used.","'useParams' is defined but never used.","'changeLineStopRiskById' is defined but never used.","'Input' is defined but never used.","'setbackends' is assigned a value but never used.","'setfrontends' is assigned a value but never used.","'setdatabases' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllTeamsFunc', 'getAppById', 'getBusinessAreaTypesFunc', and 'id'. Either include them or remove the dependency array.",["463"],"React Hook useEffect has a missing dependency: 'getUsersByTeamIdFunc'. Either include it or remove the dependency array.",["464"],"'track' is assigned a value but never used.","'businessAreaType' is assigned a value but never used.","'responsibleUserName' is assigned a value but never used.","'responsibleUserId' is assigned a value but never used.","'responsibleTeamName' is assigned a value but never used.","'responsibleTeamId' is assigned a value but never used.","'backendId' is assigned a value but never used.","'backendName' is assigned a value but never used.","'frontendId' is assigned a value but never used.","'frontendName' is assigned a value but never used.","'databaseId' is assigned a value but never used.","'databaseName' is assigned a value but never used.",["458"],["459"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'getJobsByAppIdFunc'. Either include it or remove the dependency array.",["465"],"'successMessage' is assigned a value but never used.","'setsuccessMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getManagementFactoriesAppByIdFunc'. Either include it or remove the dependency array.",["466"],"'disabled' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAppsDropListFunc' and 'getCountriesFunc'. Either include them or remove the dependency array.",["467"],"React Hook useEffect has a missing dependency: 'getServersByCountryIdFunc'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has a missing dependency: 'getAppsDropListFunc'. Either include it or remove the dependency array.",["469"],"no-global-assign","no-unsafe-negation",{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},"Update the dependencies array to be: [id, loadIssue]",{"range":"490","text":"491"},"Update the dependencies array to be: [isFiltered, issuesFilter, loadIssues]",{"range":"492","text":"493"},"Update the dependencies array to be: [loadApps, number]",{"range":"494","text":"495"},"Update the dependencies array to be: [getAllTeamsFunc, getAppById, getBusinessAreaTypesFunc, id]",{"range":"496","text":"497"},"Update the dependencies array to be: [app.responsibleTeamId, getUsersByTeamIdFunc]",{"range":"498","text":"499"},"Update the dependencies array to be: [getJobsByAppIdFunc, id]",{"range":"500","text":"501"},"Update the dependencies array to be: [id, checkboxChanged, trackChanged, getManagementFactoriesAppByIdFunc]",{"range":"502","text":"503"},"Update the dependencies array to be: [getAppsDropListFunc, getCountriesFunc]",{"range":"504","text":"505"},"Update the dependencies array to be: [countryId, getServersByCountryIdFunc]",{"range":"506","text":"507"},"Update the dependencies array to be: [getAppsDropListFunc]",{"range":"508","text":"509"},[1062,1066],"[id, loadIssue]",[811,823],"[isFiltered, issuesFilter, loadIssues]",[1791,1799],"[loadApps, number]",[3003,3005],"[getAllTeamsFunc, getAppById, getBusinessAreaTypesFunc, id]",[3092,3115],"[app.responsibleTeamId, getUsersByTeamIdFunc]",[1167,1171],"[getJobsByAppIdFunc, id]",[1522,1557],"[id, checkboxChanged, trackChanged, getManagementFactoriesAppByIdFunc]",[1243,1245],"[getAppsDropListFunc, getCountriesFunc]",[1327,1338],"[countryId, getServersByCountryIdFunc]",[1029,1031],"[getAppsDropListFunc]"]